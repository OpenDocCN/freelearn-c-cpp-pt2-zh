["```cpp\ninstall(TARGETS <target>... [...])\n```", "```cpp\nadd_executable(ch4_ex01_executable)\ntarget_sources(ch4_ex01_executable src/main.cpp)\ntarget_compile_features(ch4_ex01_executable PRIVATE cxx_std_11)\ninstall(TARGETS ch4_ex01_executable)\n```", "```cpp\ncmake -S . -B ./build -DCMAKE_BUILD_TYPE=\"Release\"\ncmake --build ./build\ncmake --install ./build --prefix /tmp/install-test\n```", "```cpp\n# For multi-config generators:\ncmake --build ./build --config Release\ncmake --install ./build --prefix /tmp/install-test --config Debug\n```", "```cpp\n-- Install configuration: \"Release\"\n-- Installing: /tmp/install-test/lib/libch2.framework.component1.a\n-- Installing: /tmp/install-test/lib/libch2.framework.component2.so\n-- Installing: /tmp/install-test/bin/ch2.driver_application\n-- Set runtime path of \"/tmp/install-test/bin/\n    ch2.driver_application\" to \"\"\n-- Installing: /tmp/install-test/bin/ch4_ex01_executable\n```", "```cpp\n# …\ninstall(TARGETS ch4_ex01_executable\n        RUNTIME DESTINATION qbin\n)\n```", "```cpp\n# ...\n-- Installing: /tmp/install-test/qbin/ch4_ex01_executable\n```", "```cpp\nadd_library(ch4_ex02_static STATIC)\ntarget_sources(ch4_ex02_static PRIVATE src/lib.cpp)\ntarget_include_directories(ch4_ex02_static PUBLIC include)\ntarget_compile_features(ch4_ex02_static PRIVATE cxx_std_11)\ninclude(GNUInstallDirs)\ninstall(TARGETS ch4_ex02_static)\ninstall (\n     DIRECTORY include/\n     DESTINATION \"${CMAKE_INSTALL_INCLUDEDIR}\"\n)\n```", "```cpp\ninstall(FILES \"${CMAKE_CURRENT_LIST_DIR}/chapter04_greeter_content\"\n  DESTINATION \"${CMAKE_INSTALL_BINDIR}\")\ninstall(PROGRAMS \"${CMAKE_CURRENT_LIST_DIR}/chapter04_greeter.py\"\n  DESTINATION \"${CMAKE_INSTALL_BINDIR}\" RENAME chapter04_greeter)\n```", "```cpp\ncmake -S . -B ./build\ncmake --build ./build\ncmake --install ./build --prefix /tmp/install-test\n```", "```cpp\n/* … */\n-- Installing: /tmp/install-test/bin/chapter04_greeter_content\n-- Installing: /tmp/install-test/bin/chapter04_greeter\n```", "```cpp\n15:01 $ /tmp/install-test/bin/chapter04_greeter\n['Hello from installed file!']\n```", "```cpp\ninstall(DIRECTORY dir1 dir2 dir3 TYPE LOCALSTATE)\n```", "```cpp\ninclude(GNUInstallDirs)\ninstall(DIRECTORY dir1 DESTINATION ${CMAKE_INSTALL_LOCALSTATEDIR}\n  FILES_MATCHING PATTERN \"*.x\")\ninstall(DIRECTORY dir2 DESTINATION ${CMAKE_INSTALL_LOCALSTATEDIR}\n  FILES_MATCHING PATTERN \"*.hpp\" EXCLUDE PATTERN \"*\")\ninstall(DIRECTORY dir3 DESTINATION ${CMAKE_INSTALL_LOCALSTATEDIR}\n  PATTERN \"bin\" EXCLUDE)\n```", "```cpp\ncmake -S . -B ./build\ncmake -- build ./build\ncmake -- install ./build –prefix /tmp/install-test\n```", "```cpp\n-- Installing: /tmp/install-test/var/dir1\n-- Installing: /tmp/install-test/var/dir1/subdir\n-- Installing: /tmp/install-test/var/dir1/subdir/asset5.x\n-- Installing: /tmp/install-test/var/dir1/asset1.x\n-- Installing: /tmp/install-test/var/dir2\n-- Installing: /tmp/install-test/var/dir2/chapter04_hello.dat\n-- Installing: /tmp/install-test/var/dir3\n-- Installing: /tmp/install-test/var/dir3/asset4\n```", "```cpp\nset(Foo_INCLUDE_DIRS ${PREFIX}/include/foo-1.2)\nset(Foo_LIBRARIES ${PREFIX}/lib/foo-1.2/libfoo.a)\n```", "```cpp\ninclude(GNUInstallDirs)\nset(ch4_ex05_lib_INSTALL_CMAKEDIR cmake CACHE PATH \"Installation\n  directory for config-file package cmake files\")Is\n```", "```cpp\ntarget_include_directories(ch4_ex05_lib PUBLIC\n      $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>\n)\ntarget_compile_features(ch4_ex05_lib PUBLIC cxx_std_11)\n```", "```cpp\ninstall(TARGETS ch4_ex05_lib\n        EXPORT ch4_ex05_lib_export\n        INCLUDES DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}\n)\ninstall (\n      DIRECTORY ${PROJECT_SOURCE_DIR}/include/\n      DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}\n)\n```", "```cpp\ninstall(EXPORT ch4_ex05_lib_export\n        FILE ch4_ex05_lib-config.cmake\n        NAMESPACE ch4_ex05_lib::\n        DESTINATION ${ch4_ex05_lib_INSTALL_CMAKEDIR}\n)\n```", "```cpp\n/*…*/\ninclude(CMakePackageConfigHelpers)\nwrite_basic_package_version_file(\n  \"ch4_ex05_lib-config-version.cmake\"\n  # Package compatibility strategy. SameMajorVersion is essentially\n    `semantic versioning`.\n  COMPATIBILITY SameMajorVersion\n)\ninstall(FILES\n  \"${CMAKE_CURRENT_BINARY_DIR}/ch4_ex05_lib-config-version.cmake\"\n  DESTINATION «${ch4_ex05_lib_INSTALL_CMAKEDIR}»\n)\n/* end of the file */\n```", "```cpp\ncmake -S . -B ./build\ncmake --build ./build\ncmake --install ./build --prefix /tmp/install-test\n```", "```cpp\n-- Installing: /tmp/install-test/cmake/ch4_ex05_lib-config.cmake\n-- Installing: /tmp/install-test/cmake/ch4_ex05_lib-config-\n  noconfig.cmake\n-- Installing: /tmp/install-test/cmake/ch4_ex05_lib-config-\n  version.cmake\n```", "```cpp\nif(NOT PROJECT_IS_TOP_LEVEL)\n  message(FATAL_ERROR \"The chapter-4, ex05_consumer project is\n    intended to be a standalone, top-level project. Do not include\n      this directory.\")\nendif()\nfind_package(ch4_ex05_lib 1 CONFIG REQUIRED)\nadd_executable(ch4_ex05_consumer src/main.cpp)\ntarget_compile_features(ch4_ex05_consumer PRIVATE cxx_std_11)\ntarget_link_libraries(ch4_ex05_consumer ch4_ex05_lib::ch4_ex05_lib)\n```", "```cpp\n#include <chapter04/ex05/lib.hpp>\nint main(void){\n    chapter04::ex05::greeter g;\n    g.greet();\n}\n```", "```cpp\ncd chapter04/ex05_consumer\ncmake -S . -B build/ -DCMAKE_PREFIX_PATH:STRING=/tmp/install-test\ncmake --build build/\n./build/ch4_ex05_consumer\n```", "```cpp\n ./build/ch4_ex05_consumer\nHello, world!\n```", "```cpp\nadd_executable(ch4_ex06_executable src/main.cpp)\ntarget_compile_features(ch4_ex06_executable PRIVATE cxx_std_11)\ntarget_link_libraries(ch4_ex06_executable PRIVATE ch4_ex06_library)\ninstall(TARGETS ch4_ex06_executable)\n```", "```cpp\nadd_library(ch4_ex06_library STATIC src/lib.cpp)\ntarget_compile_features(ch4_ex06_library PRIVATE cxx_std_11)\ntarget_include_directories(ch4_ex06_library PUBLIC include)\nset_target_properties(ch4_ex06_library PROPERTIES PUBLIC_HEADER\n  include/chapter04/ex06/lib.hpp)\ninclude(GNUInstallDirs) # Defines the ${CMAKE_INSTALL_INCLUDEDIR}\n  variable.\ninstall(TARGETS ch4_ex06_library)\ninstall (\n    DIRECTORY ${PROJECT_SOURCE_DIR}/include/\n    DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}\n)\n```", "```cpp\ncmake_minimum_required(VERSION 3.21)\nproject(\n  ch4_ex06_pack\n  VERSION 1.0\n  DESCRIPTION \"Chapter 4 Example 06, Packaging with CPack\"\n  LANGUAGES CXX)\nif(NOT PROJECT_IS_TOP_LEVEL)\n  message(FATAL_ERROR \"The chapter04, ex06_pack project is intended\n    to be a standalone, top-level project. Do not include this\n      directory.\")\nendif()\nadd_subdirectory(executable)\nadd_subdirectory(library)\nset(CPACK_PACKAGE_VENDOR \"CBP Authors\")\nset(CPACK_GENERATOR \"DEB;RPM;TBZ2\")\nset(CPACK_THREADS 0)\nset(CPACK_DEBIAN_PACKAGE_MAINTAINER \"CBP Authors\")\ninclude(CPack)\n```", "```cpp\ncd chapter04/ex06_pack\ncmake –S . -B build/\n```", "```cpp\n$ ls build/CPack*\nbuild/CPackConfig.cmake  build/CPackSourceConfig.cmake\n```", "```cpp\ncmake --build build/\ncpack --config build/CPackConfig.cmake -B build/\n```", "```cpp\nCPack: Create package using DEB\n/*…*/\nCPack: - package: /home/user/workspace/personal/CMake-Best-Practices/chapter04/ex06_pack/build/ch4_ex06_pack-1.0-Linux.deb\ngenerated.\nCPack: Create package using RPM\n/*…*/\nCPack: - package: /home/user/workspace/personal/CMake-Best-Practices/chapter04/ex06_pack/build/ch4_ex06_pack-1.0-Linux.rpm\ngenerated.\nCPack: Create package using TBZ2\n/*…*/\nCPack: - package: /home/user/workspace/personal/CMake-Best-Practices/chapter04/ex06_pack/build/ch4_ex06_pack-1.0-Linux.tar.bz2\ngenerated.\n```", "```cpp\nsudo dpkg -i build/ch4_ex06_pack-1.0-Linux.deb\n```", "```cpp\n13:38 $ ch4_ex06_executable\nHello, world!\n```", "```cpp\nif(WIN32)\n  if(CMAKE_BUILD_TYPE STREQUAL \"Debug\")\n    set(CMAKE_INSTALL_DEBUG_LIBRARIES TRUE)\n  endif()\n  include(InstallRequiredSystemLibraries)\nendif()\n```", "```cpp\n# this includes the runtime directories of the executable and the library\ninstall(TARGETS ch4_ex07_executable\n        RUNTIME_DEPENDENCIES\n        PRE_EXCLUDE_REGEXES \"api-ms-.*\" \"ext-ms-.*\"\n        POST_EXCLUDE_REGEXES \".*system32/.*\\\\.dll\"\n        )\n```"]