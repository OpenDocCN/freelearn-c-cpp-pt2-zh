["```cpp\n├── CMakeLists.txt\n├── build\n├── include/project_name\n└── src\n```", "```cpp\n├── CMakeLists.txt\n├── build\n├── include/project_name\n├── src\n└── subproject\n    ├── CMakeLists.txt\n    ├── include\n    │   └── subproject\n    └── src\n```", "```cpp\n#include <iostream>\nint main(int, char **) {\n  std::cout << \"Welcome to CMake Best Practices\\n\";\n  return 0;\n}\n```", "```cpp\ncmake_minimum_required(VERSION 3.21)\nproject(\n    hello_world_standalone\n    VERSION 1.0\n    DESCRIPTION \"A simple C++ project\"\n    HOMEPAGE_URL  https://github.com/PacktPublishing/CMake-Best-Practices---2nd-Edition\n    LANGUAGES CXX\n)\nadd_executable(hello_world)\ntarget_sources(hello_world PRIVATE src/main.cpp)\n```", "```cpp\nproject(hello_world\n...\n)\nadd_executable(${PROJECT_NAME})\n```", "```cpp\ncmake_minimum_required(VERSION 3.21)\nproject(\n  ch3_hello\n  VERSION 1.0\n  DESCRIPTION\n    \"A simple C++ project to demonstrate creating executables and\n      libraries in CMake\"\n  LANGUAGES CXX)\nadd_library(hello)\nadd_library(ch3_hello::hello ALIAS hello)\ntarget_sources(\n  hello\n  PRIVATE src/hello.cpp src/internal.cpp)\ntarget_compile_features(hello PUBLIC cxx_std_17)\ntarget_include_directories(\n  hello\n  PRIVATE src/hello\n  PUBLIC include)\n```", "```cpp\nadd_library(ch3_hello::hello ALIAS hello)\n```", "```cpp\nadd_library(ch3_hello::hello ALIAS hello)\n...\ntarget_link_libraries(SomeLibrary PRIVATE ch3_hello::hello)\n```", "```cpp\nadd_library(ch3_hello)\nset_target_properties(\n   ch3_hello\n   PROPERTIES OUTPUT_NAME hello\n)\n```", "```cpp\nset_target_properties(\n    hello\n    PROPERTIES VERSION ${PROJECT_VERSION} # Contains 1.2.3\n    SOVERSION ${PROJECT_VERSION_MAJOR} # Contains only 1\n)\n```", "```cpp\nset_target_properties(\nhello\nPROPERTIES DEBUG_POSTFIX d)\n```", "```cpp\nclass HELLO_EXPORT Hello {\n…\n};\n```", "```cpp\nadd_library(hello SHARED)\nset_property(TARGET hello PROPERTY CXX_VISIBILITY_PRESET \"hidden\")\nset_property(TARGET hello PROPERTY VISIBILITY_INLINES_HIDDEN TRUE)\ninclude(GenerateExportHeader)\ngenerate_export_header(hello EXPORT_FILE_NAME export/hello/\n  export_hello.hpp)\ntarget_include_directories(hello PUBLIC \"${CMAKE_CURRENT_BINARY_DIR}\n  /export\")\n```", "```cpp\nproject(\n  ch3_hello_header_only\n  VERSION 1.0\n  DESCRIPTION \"Chapter 3 header-only example\"\n  LANGUAGES CXX)\nadd_library(hello_header_only INTERFACE)\ntarget_include_directories(hello_header_only INTERFACE include/)\ntarget_compile_features( hello_header_only INTERFACE cxx_std_17)\n```", "```cpp\nadd_subdirectory(hello_lib)\nadd_subdirectory(hello_header_only)\nadd_subdirectory(hello_object)\nadd_executable(chapter3)\ntarget_sources(chapter3 PRIVATE src/main.cpp)\ntarget_link_libraries(chapter3 PRIVATE hello_header_only hello_lib\n  hello_object)\n```", "```cpp\ntarget_compile_options(\n  hello\n  PRIVATE $<$<CXX_COMPILER_ID:MSVC>:/SomeOption>\n          $<$<CXX_COMPILER_ID:GNU,Clang,AppleClang>:-someOption>\n)\n```", "```cpp\n{\n  \"directory\": \"/workspaces/CMake-Best-Pracitces/build\",\n  \"command\": \"/usr/bin/g++ -I/workspaces/CMake-Best-Practices/\n  chapter_3/hello_header_only/include -I/workspaces/CMake-Tips-and-\n  Tricks/chapter_3/hello_lib/include -I/workspaces/CMake-Tips-and-\n  Tricks/chapter_3/hello_object_lib/include -g -fopenmp -o\n  chapter_3/CMakeFiles/chapter3.dir/src/main.cpp.o -c /workspaces\n  /CMake-Best-Practices/chapter_3/src/main.cpp\",\n  \"file\": \"/workspaces/CMake-Best-Practices/chapter_3/src/main.cpp\"\n},\n```"]