["```cpp\nAvailable configure presets:\n  \"ninja-debug\"   - Ninja (Debug)\n  \"ninja-release\" - Ninja (Release)\n```", "```cpp\ncmake --preset=name\n```", "```cpp\n{\n   \"version\": 6,\n   \"cmakeMinimumRequired\": {\"major\": 3,\"minor\": 25,\"patch\": 0  },\n   \"configurePresets\": [...],\n   \"buildPresets\": [...],\n   \"testPresets\": [...],\n  \"packagePresets\": [...],\n  \"workflowPresets\": [...],\n   \"vendor\": {\n      \"microsoft.com/VisualStudioSettings/CMake/1.9\": {                      \"intelliSenseMode\": \"windows-msvc-x64\"\n      }  }\n}\n```", "```cpp\n{\n  \"version\": 3,\n  \"configurePresets\": [\n    {\n      \"name\": \"ninja\",\n      \"displayName\": \"Ninja Debug\",\n      \"description\": \"build in debug mode using Ninja generator\",\n      \"generator\": \"Ninja\",\n      \"binaryDir\": \"build\",\n      \"cacheVariables\": { \"CMAKE_BUILD_TYPE\": \"Debug\" }\n    }\n  ]\n}\n```", "```cpp\n\"cacheVariables\": {\n  \"CMAKE_TOOLCHAIN_FILE\": {\n    \"type\": \"FILEPATH\",\n    \"value\": \"${sourceDir}/cmake/toolchain.cmake\"\n  }\n}\n```", "```cpp\n{\n  \"version\": 3,\n  \"configurePresets\": [\n    {\n      \"name\": \"ci-ninja\",\n      \"generator\": \"Ninja\",\n      \"binaryDir\": \"build\",\n      \"environment\": {\n        \"PATH\": \"${sourceDir}/scripts:$penv{PATH}\",\n        \"LOCAL_PATH\": \"$env{PATH}\",\n        \"EMPTY\" : null\n    }\n  ]\n}\n```", "```cpp\n{\n   \"version\": 3,\n   \"configurePresets\": [\n      {\n         \"name\": \"ci-ninja\",\n         \"generator\": \"Ninja\",\n         \"hidden\": true,\n         \"binaryDir\": \"build\"\n      },\n      {\n         \"name\": \"ci-ninja-debug\",\n         \"inherits\": \"ci-ninja\",\n         \"cacheVariables\": {\n            \"CMAKE_BUILD_TYPE\": \"Debug\"\n         }\n      },\n      {\n          \"name\": \"ci-ninja-release\",\n          \"inherits\": \"ci-ninja\",\n          \"cacheVariables\": {\n             \"CMAKE_BUILD_TYPE\": \"Release\"\n         }\n      }\n   ]\n}\n```", "```cpp\n{\n    \"version\": 6,\n    \"configurePresets\": [\n    {\n      \"name\": \"gcc-11\",\n      \"hidden\": true,\n      \"binaryDir\": \"build\",\n      \"cacheVariables\": {\n          \"CMAKE_C_COMPILER\": \"gcc-11\",\n          \"CMAKE_CXX_COMPILER\": \"g++-11\"\n       }\n     },\n     {\n       \"name\": \"ninja-debug-gcc\",\n       \"inherits\": [\"ci-ninja-debug\",\"gcc-11\"],\n       \"cacheVariables\": {\n            \"CMAKE_BUILD_TYPE\": \"Debug\"\n         }\n     },\n   ]\n}\n```", "```cpp\n{\n  \"name\": \"ci-msvc-19\",\n  \"generator\": \"Visual Studio 16 2019\",\n  \"binaryDir\": \"build\",\n  \"condition\": {\n    \"type\": \"equals\",\n    \"lhs\": \"${hostSystemName}\",\n    \"rhs\": \"Windows\"\n  }\n}\n```", "```cpp\n{\n\"name\": \"WindowsAndLinuxOnly\",\n\"condition\": {\n    \"type\": \"anyOf\",\n    \"conditions\": [\n        {\n            \"type\": \"equals\",\n            \"lhs\": \"${hostSystemName}\",\n            \"rhs\": \"Windows\"\n        },\n        {\n            \"type\": \"equals\",\n            \"lhs\": \"${hostSystemName}\",\n            \"rhs\": \"Linux\"\n        }\n    ]\n}\n```", "```cpp\n{\n    \"version\": 6,\n    \"configurePresets\": [\n        {\n            \"name\": \"ci-msvc-19\",\n            \"displayName\": \"msvc 19\",\n            \"description\": \"Configuring for msvc 19\",\n            \"generator\": \"Visual Studio 16 2019\",\n            \"binaryDir\" : \"build\"\n        }\n    ],\n    \"buildPresets\": [\n        {\n            \"name\": \"ci-msvc-debug\",\n            \"configurePreset\": \"ci-msvc-19\",\n            \"configuration\": \"Debug\"\n        },\n        {\n            \"name\": \"ci-msvc-release\",\n            \"configurePreset\": \"ci-msvc-19\",\n            \"configuration\": \"Release\"\n        },\n        {\n            \"name\": \"ci-documentation\",\n            \"configurePreset\": \"ci-msvc-19\",\n            \"targets\": [\n                \"api-doc\",\n                \"doc\"\n            ]\n        }\n    ]\n}\n```", "```cpp\n{\n    \"version\": 3,\n    \"configurePresets\": [\n        {\n            \"name\": \"ci-ninja\",\n            ...\n        }\n    \"testPresets\": [\n{\n            \"name\": \"ci-feature-X\",\n            \"configurePreset\": \"ci-ninja\",\n            \"filter\": {\n                \"include\": {\n                    \"name\": \"feature-X\"\n                },\n                \"exclude\": {\n                    \"label\": \"integration\"\n                }\n}\n        }\n    ]\n}\n```", "```cpp\nctest --tests-regex feature-X --label-exclude integration\n```", "```cpp\n\"packagePresets\": [\n    {\n        \"name\": \"ci-package-tgz\",\n        \"configurePreset\": \"ci-ninja-release\",\n        \"generators\": [\n            \"TGZ\"\n        ],\n        \"packageDirectory\": \"${sourceDir}/dist\"\n    }\n]\n```", "```cpp\ncmake --workflow --list-presets\n```", "```cpp\ncmake --workflow --preset=ci-ninja-debug-workflow\n```", "```cpp\n\"workflowPresets\": [\n    {\n        \"name\": \"ci-ninja-debug-workflow\",\n        \"displayName\": \"CI\",\n        \"description\": \"Continuous Integration\",\n        \"steps\": [\n            {\n                \"type\": \"configure\",\n                \"name\": \"ci-ninja-debug\"\n            },\n            {\n                \"type\": \"build\",\n                \"name\": \"ci-ninja-debug-build\"\n            },\n            {\n                \"type\": \"test\",\n                \"name\": \"ci-unit-tests-debug\"\n            },\n            {\n                \"type\": \"package\",\n                \"name\": \"ci-package-tgz\"\n            }\n        ]\n    }\n]\n```", "```cpp\nFROM alpine:3.20.2\nRUN apk add --no-cache cmake ninja g++ bash make git\nRUN <any command to install additional libraries etc.>\n```", "```cpp\ndocker build . -t builder_minimal\n```", "```cpp\ndocker run --user 1000:1000 --rm -v $(pwd):/workspace\n  builder_minimal cmake -S /workspace -B /workspace/build\ndocker run --user 1000:1000 --rm -v $(pwd):/workspace\n  builder_minimal cmake --build /workspace/build\n```", "```cpp\ndocker run --user 1000:1000 --rm -ti -v $(pwd):/workspace\n  builder_minimal\n```", "```cpp\ncmake -S <source_dir> -B <binary_dir> -DCMAKE_TOOLCHAIN_FILE=\n  <path/to/toolchain.cmake>\n```", "```cpp\nset(CMAKE_SYSTEM_NAME Linux)\nset(CMAKE_SYSROOT /path/to/sysroot/)\nset(CMAKE_STAGING_PREFIX path/to/staging/directory)\nset(CMAKE_C_COMPILER /path/to/sysroot/usr/bin/gcc-10)\nset(CMAKE_CXX_COMPILER /path/to/sysroot/usr/bin/g++-10)\nset(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)\nset(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)\nset(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)\nset(CMAKE_FIND_ROOT_PATH_MODE_PACKAGE BOTH)\n```"]