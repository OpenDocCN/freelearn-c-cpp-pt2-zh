["```cpp\n$ git clone https://github.com/dev-cafe/cmake-cookbook.git\n```", "```cpp\n$ git clone --single-branch -b v1.0 https://github.com/dev-cafe/cmake-cookbook.git\n```", "```cpp\n$ docker run -it devcafe/cmake-cookbook_ubuntu-18.04\n$ git clone https://github.com/dev-cafe/cmake-cookbook.git\n$ cd cmake-cookbook\n$ pipenv install --three\n$ pipenv run python testing/collect_tests.py 'chapter-*/recipe-*'\n```", "```cpp\n$ cmake_version=\"3.5.2\"\n$ target_path=$HOME/Deps/cmake/${cmake_version}\n$ cmake_url=\"https://cmake.org/files/v${cmake_version%.*}/cmake-${cmake_version}-Linux-x86_64.tar.gz\"\n$ mkdir -p \"${target_path}\"\n$ curl -Ls \"${cmake_url}\" | tar -xz -C \"${target_path}\" --strip-components=1\n$ export PATH=$HOME/Deps/cmake/${cmake_version}/bin${PATH:+:$PATH}\n$ cmake --version\n```", "```cpp\n$ brew upgrade cmake\n```", "```cpp\n$ pacman -S mingw64/mingw-w64-x86_64-cmake\n```", "```cpp\n$ pacman -S mingw64/mingw-w64-i686-cmake\n```", "```cpp\n$ sudo apt-get install g++ gcc gfortran \n```", "```cpp\n$ sudo apt-get install clang clang++ gfortran\n```", "```cpp\n$ brew install gcc\n```", "```cpp\n$ pacman -S mingw64/mingw-w64-x86_64-toolchain\n```", "```cpp\n$ mkdir -p ninja\n$ ninja_url=\"https://github.com/Kitware/ninja/releases/download/v1.8.2.g3bbbe.kitware.dyndep-1.jobserver-1/ninja-1.8.2.g3bbbe.kitware.dyndep-1.jobserver-1_x86_64-linux-gnu.tar.gz\"\n$ curl -Ls ${ninja_url} | tar -xz -C ninja --strip-components=1\n$ export PATH=$HOME/Deps/ninja${PATH:+:$PATH} \n```", "```cpp\n$ pacman -S mingw64/mingw-w64-x86_64-ninja\n```", "```cpp\n$ sudo apt-get install python3.5-dev\n```", "```cpp\n$ pacman -S mingw64/mingw-w64-x86_64-python3\n$ pacman -S mingw64/mingw-w64-x86_64-python3-pip\n$ python3 -m pip install pipenv \n```", "```cpp\n$ pip install --user pip pipenv --upgrade\n$ pipenv install --python python3.5\n```", "```cpp\n$ virtualenv --python=python3.5 venv\n$ source venv/bin/activate\n$ pip install -r requirements.txt\n```", "```cpp\n$ curl -Ls https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh > miniconda.sh\n$ bash miniconda.sh -b -p \"$HOME\"/Deps/conda &> /dev/null\n$ touch \"$HOME\"/Deps/conda/conda-meta/pinned\n$ export PATH=$HOME/Deps/conda/bin${PATH:+:$PATH}\n$ conda config --set show_channel_urls True\n$ conda config --set changeps1 no\n$ conda update --all\n$ conda clean -tipy\n```", "```cpp\n$basedir = $pwd.Path + \"\\\"\n$filepath = $basedir + \"Miniconda3-latest-Windows-x86_64.exe\"\n$Anaconda_loc = \"C:\\Deps\\conda\"\n$args = \"/InstallationType=JustMe /AddToPath=0 /RegisterPython=0 /S /D=$Anaconda_loc\"\nStart-Process -FilePath $filepath -ArgumentList $args -Wait -Passthru\n\n$conda_path = $Anaconda_loc + \"\\Scripts\\conda.exe\"\n$args = \"config --set show_channel_urls True\"\nStart-Process -FilePath \"$conda_path\" -ArgumentList $args -Wait -Passthru\n$args = \"config --set changeps1 no\"\nStart-Process -FilePath \"$conda_path\" -ArgumentList $args -Wait -Passthru\n$args = \"update --all\"\nStart-Process -FilePath \"$conda_path\" -ArgumentList $args -Wait -Passthru\n$args = \"clean -tipy\"\nStart-Process -FilePath \"$conda_path\" -ArgumentList $args -Wait -Passthru\n```", "```cpp\n$ conda create -n cmake-cookbook python=3.5\n$ conda activate cmake-cookbook\n$ conda install --file requirements.txt\n```", "```cpp\n$ sudo apt-get install libatlas-dev liblapack-dev liblapacke-dev\n```", "```cpp\n$ pacman -S mingw64/mingw-w64-x86_64-openblas\n```", "```cpp\n$ sudo apt-get install openmpi-bin libopenmpi-dev\n```", "```cpp\n$ brew install mpich\n```", "```cpp\n$ eigen_version=\"3.3.4\"\n$ mkdir -p eigen\n$ curl -Ls http://bitbucket.org/eigen/eigen/get/${eigen_version}.tar.gz | tar -xz -C eigen --strip-components=1\n$ cd eigen\n$ cmake -H. -Bbuild_eigen -DCMAKE_INSTALL_PREFIX=\"$HOME/Deps/eigen\" &> /dev/null\n$ cmake --build build_eigen -- install &> /dev/null\n```", "```cpp\n$ sudo apt-get install libboost-filesystem-dev libboost-python-dev libboost-test-dev\n```", "```cpp\n$ brew cask uninstall --force oclint\n$ brew uninstall --force --ignore-dependencies boost\n$ brew install boost \n$ brew install boost-python3\n```", "```cpp\n$ sudo apt-get install gcc-mingw-w64 g++-mingw-w64 gfortran-mingw-w64\n```", "```cpp\n$ brew install mingw-w64\n```", "```cpp\n$ sudo apt-get install pkg-config libzmq3-dev doxygen graphviz-dev uuid-dev\n```", "```cpp\n$ brew install ossp-uuid pkg-config zeromq doxygen\n```", "```cpp\n$ pacman -S mingw64/mingw-w64-x86_64-zeromq\n$ pacman -S mingw64/mingw-w64-x86_64-pkg-config\n$ pacman -S mingw64/mingw-w64-x86_64-doxygen\n$ pacman -S mingw64/mingw-w64-x86_64-graphviz\n```", "```cpp\n$ conda install --yes --quiet conda-build anaconda-client jinja2 setuptools\n$ conda clean -tipsy\n$ conda info -a\n```", "```cpp\n$conda_path = \"C:\\Deps\\conda\\Scripts\\conda.exe\"\n\n$args = \"install --yes --quiet conda-build anaconda-client jinja2 setuptools\"\nStart-Process -FilePath \"$conda_path\" -ArgumentList $args -Wait -Passthru\n\n$args = \"clean -tipsy\"\nStart-Process -FilePath \"$conda_path\" -ArgumentList $args -Wait -Passthru\n\n$args = \"info -a\"\nStart-Process -FilePath \"$conda_path\" -ArgumentList $args -Wait -Passthru\n```", "```cpp\n$ pipenv run python testing/collect_tests.py 'chapter-0[1,7]/recipe-0[1,2,5]'\n```", "```cpp\n$ env VERBOSE_OUTPUT=ON pipenv run python testing/collect_tests.py 'chapter-*/recipe-*'\n```"]