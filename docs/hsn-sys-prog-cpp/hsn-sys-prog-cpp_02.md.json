["```cpp\nint main(void) {}\nint main(int argc, char *argv[]) {}\n```", "```cpp\n#include <stdio.h>\n\nint main(void) \n{\n    printf(\"Hello World\\n\");\n}\n```", "```cpp\n> gcc -v scratchpad.c; ./a.out\n\nUsing built-in specs.\nCOLLECT_GCC=gcc\nCOLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-linux-gnu/7/lto-wrapper\nOFFLOAD_TARGET_NAMES=nvptx-none\nOFFLOAD_TARGET_DEFAULT=1\nTarget: x86_64-linux-gnu\nConfigured with: ...\n...\n```", "```cpp\n/usr/lib/gcc/x86_64-linux-gnu/7/cc1 -quiet -v -imultiarch x86_64-linux-gnu scratchpad.c -quiet -dumpbase scratchpad.c -mtune=generic -march=x86-64 -auxbase scratchpad -version -fstack-protector-strong -Wformat -Wformat-security -o /tmp/ccMSWHgC.s\n```", "```cpp\n/usr/bin/x86_64-linux-gnu-as -v --64 -o /tmp/cc9oaJWV.o /tmp/ccMSWHgC.s\n```", "```cpp\n/usr/lib/gcc/x86_64-linux-gnu/7/collect2 -plugin /usr/lib/gcc/x86_64-linux-gnu/7/liblto_plugin.so -plugin-opt=/usr/lib/gcc/x86_64-linux-gnu/7/lto-wrapper -plugin-opt=-fresolution=/tmp/ccWQB2Gf.res -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lgcc_s -plugin-opt=-pass-through=-lc -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lgcc_s --sysroot=/ --build-id --eh-frame-hdr -m elf_x86_64 --hash-style=gnu --as-needed -dynamic-linker /lib64/ld-linux-x86-64.so.2 -pie -z now -z relro /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/crti.o /usr/lib/gcc/x86_64-linux-gnu/7/crtbeginS.o -L/usr/lib/gcc/x86_64-linux-gnu/7 -L/usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu -L/usr/lib/gcc/x86_64-linux-gnu/7/../../../../lib -L/lib/x86_64-linux-gnu -L/lib/../lib -L/usr/lib/x86_64-linux-gnu -L/usr/lib/../lib -L/usr/lib/gcc/x86_64-linux-gnu/7/../../.. /tmp/cc9oaJWV.o -lgcc --push-state --as-needed -lgcc_s --pop-state -lc -lgcc --push-state --as-needed -lgcc_s --pop-state /usr/lib/gcc/x86_64-linux-gnu/7/crtendS.o /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/crtn.o\n```", "```cpp\n> gcc -c scratchpad.c; objdump -d scratchpad.o\n\n...\n\n0000000000000000 <main>:\n   0: 55 push %rbp\n   1: 48 89 e5 mov %rsp,%rbp\n   4: 48 8d 3d 00 00 00 00 lea 0x0(%rip),%rdi # b <main+0xb>\n   b: e8 00 00 00 00 callq 10 <main+0x10>\n  10: b8 00 00 00 00 mov $0x0,%eax\n  15: 5d pop %rbp\n  16: c3 retq\n```", "```cpp\nint test(void)\n{\n    return 0;\n}\n\nint main(void)\n{\n    return test();\n}\n```", "```cpp\n> gcc -c scratchpad.c; objdump -d scratchpad.o\n\n...\n\n0000000000000000 <test>:\n   0: 55 push %rbp\n   1: 48 89 e5 mov %rsp,%rbp\n   4: b8 00 00 00 00 mov $0x0,%eax\n   9: 5d pop %rbp\n   a: c3 retq\n\n000000000000000b <main>:\n   b: 55 push %rbp\n   c: 48 89 e5 mov %rsp,%rbp\n   f: e8 00 00 00 00 callq 14 <main+0x9>\n  14: 5d pop %rbp\n  15: c3 retq\n```", "```cpp\n> ldd a.out\n  linux-vdso.so.1 (0x00007ffdc5bfd000)\n  libc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007f92878a0000)\n  /lib64/ld-linux-x86-64.so.2 (0x00007f9287e93000)\n```", "```cpp\n#include <stdio.h>\n\nint main(void) \n{\n    printf(\"Hello World\\n\");\n}\n```", "```cpp\n#include <stdio.h>\n\nint main(void)\n{\n    int i;\n\n    for (i = 0; i < 10; i++) {\n        printf(\"Hello World: %d\\n\", i);\n    }\n}\n```", "```cpp\n#include <stdio.h>\n\nint main(void)\n{\n    {\n        int i;\n        ...\n    }\n\n    {\n        int i;\n        ...\n    }\n}\n```", "```cpp\nint main(void)\n{\n    int i;\n    int *p = &i;\n}\n\n// > gcc scratchpad.c; ./a.out\n```", "```cpp\nint main(void)\n{\n    int i;\n    void *p = &i;\n\n    int *int_p = p;\n    float *float_p = p;\n}\n\n// > gcc scratchpad.c; ./a.out\n```", "```cpp\n#include <stdio.h>\n\nint main(void)\n{\n    int i = 42;\n    int *p = &i;\n\n    if (p) {\n        printf(\"The answer is: %d\\n\", *p);\n    }\n}\n\n// > gcc scratchpad.c; ./a.out\n// The answer is: 42\n```", "```cpp\n#include <stdio.h>\n\nint main(void)\n{\n    int i[2] = {42, 43};\n    int *p = i;\n\n    if (p) {\n        // method #1\n        printf(\"The answer is: %d and %d\\n\", i[0], p[0]);\n        printf(\"The answer is: %d and %d\\n\", i[1], p[1]);\n\n        // method #2\n        printf(\"The answer is: %d and %d\\n\", *(i + 0), *(p + 0));\n        printf(\"The answer is: %d and %d\\n\", *(i + 1), *(p + 1));\n    }\n}\n\n// > gcc scratchpad.c; ./a.out\n// The answer is: 42 and 42\n// The answer is: 43 and 43\n// The answer is: 42 and 42\n// The answer is: 43 and 43\n```", "```cpp\n#include <iostream>\n\nint main(void)\n{\n    std::cout << \"Hello World\\n\";\n}\n\n// > g++ scratchpad.cpp; ./a.out\n// Hello World\n```", "```cpp\n> gcc scratchpad.c -o c_example\n> g++ scratchpad.cpp -o cpp_example\n> stat -c \"%s %n\" *\n8352 c_example\n8768 cpp_example\n```", "```cpp\n> nm -gC cpp_example\n                 U __cxa_atexit@@GLIBC_2.2.5\n                 w __cxa_finalize@@GLIBC_2.2.5\n00000000000008f4 T _fini\n0000000000000688 T _init\n00000000000007fa T main\n00000000000006f0 T _start\n                 U std::ios_base::Init::Init()@@GLIBCXX_3.4\n                 U std::ios_base::Init::~Init()@@GLIBCXX_3.4\n0000000000201020 B std::cout@@GLIBCXX_3.4\n                 U std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)@@GLIBCXX_3.4\n\n...\n```", "```cpp\n> nm -gC cpp_example\n                 U __cxa_atexit@@GLIBC_2.2.5\n                 w __cxa_finalize@@GLIBC_2.2.5\n00000000000008f4 T _fini\n0000000000000688 T _init\n00000000000007fa T main\n00000000000006f0 T _start\n                 U _ZNSt8ios_base4InitC1Ev@@GLIBCXX_3.4\n                 U _ZNSt8ios_base4InitD1Ev@@GLIBCXX_3.4\n0000000000201020 B _ZSt4cout@@GLIBCXX_3.4\n                 U _ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@@GLIBCXX_3.4\n\n...\n```", "```cpp\n> c++filt _ZSt4cout\nstd::cout\n```", "```cpp\nvoid test(void) {}\nvoid test(bool b) {}\n\nint main(void)\n{\n    test();\n    test(false);\n}\n\n// > g++ scratchpad.cpp; ./a.out\n```", "```cpp\n> nm -g a.out\n...\n\n0000000000000601 T _Z4testb\n00000000000005fa T _Z4testv\n```", "```cpp\n#include <iostream>\n\nstruct mystruct {\n    int data1{42};\n    int data2{42};\n};\n\nint main(void)\n{\n    mystruct s;\n    std::cout << s.data1 << '\\n';\n}\n\n// > g++ scratchpad.cpp; ./a.out\n// 42\n```", "```cpp\nstruct mystruct {\n    int data1{};\n    int data2{};\n    int data3{};\n    int data4{};\n    int data5{};\n    int data6{};\n    int data7{};\n    int data8{};\n};\n\nvoid test(mystruct *s)\n{\n}\n\nint main(void)\n{\n    mystruct s;\n    test(&s);\n}\n\n// > g++ scratchpad.cpp; ./a.out\n```", "```cpp\nstruct mystruct {\n    int data1{};\n    int data2{};\n    int data3{};\n    int data4{};\n    int data5{};\n    int data6{};\n    int data7{};\n    int data8{};\n};\n\nvoid test(mystruct &s)\n{\n}\n\nint main(void)\n{\n    mystruct s;\n    test(s);\n}\n\n// > g++ scratchpad.cpp; ./a.out\n```", "```cpp\n#include <iostream>\n\nint main()\n{\n    void *ptr;\n\n    if (posix_memalign(&ptr, 0x1000, 42 * sizeof(int))) {\n        std::clog << \"ERROR: unable to allocate aligned memory\\n\";\n        ::exit(EXIT_FAILURE);\n    }\n\n    std::cout << ptr << '\\n';\n    free(ptr);\n}\n\n// > g++ -std=c++17 scratchpad.cpp; ./a.out\n// 0x55c5d31d1000\n```"]