["```cpp\nQT += rhi\n```", "```cpp\nQT += gui \n```", "```cpp\nfind_package(Qt6 COMPONENTS Gui REQUIRED)\ntarget_link_libraries(mytarget PRIVATE Qt6::Gui)\n```", "```cpp\nvoid PaintWindow::paintEvent(QPaintEvent *event)\n{\n\u00a0\u00a0\u00a0\u00a0QPainter painter;\n\u00a0\u00a0\u00a0\u00a0painter.begin(this);\n\u00a0\u00a0\u00a0\u00a0//draws a line\n\u00a0\u00a0\u00a0\u00a0painter.drawLine(QPoint(50, 50), QPoint(200, 50));\n\u00a0\u00a0\u00a0\u00a0//draws a text\n\u00a0\u00a0\u00a0\u00a0painter.drawText(QPoint(50, 100), \"Text\");\n\u00a0\u00a0\u00a0\u00a0//draws an ellipse\n\u00a0\u00a0\u00a0\u00a0painter.drawEllipse(QPoint(100,150),50,20);\n\u00a0\u00a0\u00a0\u00a0//draws an arc\n\u00a0\u00a0\u00a0\u00a0QRectF drawingRect(50, 200, 100, 50);\n\u00a0\u00a0\u00a0\u00a0int startAngle = 90 * 16;\n\u00a0\u00a0\u00a0\u00a0int spanAngle = 180 * 16;\n\u00a0\u00a0\u00a0\u00a0painter.drawArc(drawingRect, startAngle, spanAngle);\n\u00a0\u00a0\u00a0\u00a0//draws a pie\n\u00a0\u00a0\u00a0\u00a0QRectF drawingRectPie(150, 200, 100, 50);\n\u00a0\u00a0\u00a0\u00a0startAngle = 60 * 16;\n\u00a0\u00a0\u00a0\u00a0spanAngle = 70 * 16;\n\u00a0\u00a0\u00a0\u00a0painter.drawPie(drawingRectPie, startAngle, spanAngle);\n\u00a0\u00a0\u00a0\u00a0painter.end();\n\u00a0\u00a0\u00a0\u00a0QWidget::paintEvent(event);\n}\n```", "```cpp\nQImage image(128, 128, QImage::Format_ARGB32); \nQPainter painter(&image);\n```", "```cpp\nimage.save(\"image.png\"); \n```", "```cpp\nvoid MyWidget:: paintEvent(QPaintEvent *event)\n{\n\u00a0\u00a0\u00a0\u00a0QPainter painter(this);\n\u00a0\u00a0\u00a0\u00a0QPolygon polygon;\n\u00a0\u00a0\u00a0\u00a0polygon << QPoint(100, 185) << QPoint(175, 175)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<< QPoint(200, 110) << QPoint(225, 175)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<< QPoint(300, 185) << QPoint(250, 225)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<< QPoint(260, 290) << QPoint(200, 250)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<< QPoint(140, 290) << QPoint(150, 225)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<< QPoint(100, 185);\n\u00a0\u00a0\u00a0\u00a0QBrush brush;\n\u00a0\u00a0\u00a0\u00a0brush.setColor(Qt::yellow);\n\u00a0\u00a0\u00a0\u00a0brush.setStyle(Qt::SolidPattern);\n\u00a0\u00a0\u00a0\u00a0QPen pen(Qt::black, 3, Qt::DashDotDotLine, \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Qt::RoundCap, Qt::RoundJoin);\n\u00a0\u00a0\u00a0\u00a0painter.setPen(pen);\n\u00a0\u00a0\u00a0\u00a0QPainterPath path;\n\u00a0\u00a0\u00a0\u00a0path.addPolygon(polygon);\n\u00a0\u00a0\u00a0\u00a0painter.drawPolygon(polygon);\n\u00a0\u00a0\u00a0\u00a0painter.fillPath(path, brush);\n\u00a0\u00a0\u00a0\u00a0QWidget:: paintEvent(event);\n}\n```", "```cpp\nqputenv(\"QSG_RHI_BACKEND\",\"opengl\");\n```", "```cpp\nimport QtQuick3D \n```", "```cpp\nimport QtQuick3D.Effects\nimport QtQuick3D.Helpers\n```", "```cpp\n>qsb --glsl 100es,120,150 --hlsl 50 --msl 12 -o <Output_File.qsb> <Input_File.frag>\n```", "```cpp\n>C:\\Qt\\6.0.2\\mingw81_64\\bin>qsb --glsl 100es,120,150 --hlsl 50 --msl 12 -o myeffect.frag.qsb myeffect.frag\n```", "```cpp\nimport QtQuick\nimport QtQuick.Window\nWindow {\n\u00a0\u00a0\u00a0\u00a0width: 512\n\u00a0\u00a0\u00a0\u00a0height: 512\n\u00a0\u00a0\u00a0\u00a0visible: true\n\u00a0\u00a0\u00a0\u00a0title: qsTr(\"Shader Effects Demo\")\n\u00a0\u00a0\u00a0\u00a0Row {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0anchors.centerIn: parent\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0width: 300\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0spacing: 20\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Image {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0id: originalImage\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0width: 128; height: 94\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0source: \"qrc:/logo.png\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ShaderEffect {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0width: 160; height: width\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0property variant source: originalImage\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0vertexShader: \"grayeffect.vert.qsb\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0fragmentShader: \"grayeffect.frag.qsb\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0}\n}\n```", "```cpp\nimport QtQuick\nimport QtQuick.Window\nWindow {\n\u00a0\u00a0\u00a0\u00a0width: 512\n\u00a0\u00a0\u00a0\u00a0height: 512\n\u00a0\u00a0\u00a0\u00a0visible: true\n\u00a0\u00a0\u00a0\u00a0title: qsTr(\"Canvas Demo\")\n\u00a0\u00a0\u00a0\u00a0Canvas {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0id: canvas\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0anchors.fill: parent\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0onPaint: {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0var context = getContext(\"2d\")\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0context.lineWidth = 2\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0context.strokeStyle = \"red\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0context.beginPath()\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0context.moveTo(100,100)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0context.lineTo(250,100)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0context.lineTo(250,150)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0context.lineTo(100,150)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0context.closePath()\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0context.stroke()\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0}\n}\n```", "```cpp\n import QtQuick.Particles\n```", "```cpp\n\u00a0\u00a0\u00a0\u00a0ParticleSystem {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0id: particleSystem\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0anchors.fill: parent\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Image {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0source: \"qrc:/logo.png\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0anchors.centerIn: parent\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ImageParticle {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0system: particleSystem\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0source: \"qrc:/particle.png\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0colorVariation: 0.5\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0color: \"#00000000\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Emitter {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0id: emitter\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0system: particleSystem\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0enabled: true\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0x: parent.width/2; y: parent.height/2\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0maximumEmitted: 8000; emitRate: 6000\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0size: 4 ; endSize: 24\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0sizeVariation: 4\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0acceleration: AngleDirection {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0angleVariation: 360; magnitude: 360; \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0}\n```", "```cpp\nQPropertyAnimation *animatateButtonA = new\nQPropertyAnimation(ui->pushButtonA, \"geometry\");\nanimatateButtonA->setDuration(2000);\nanimatateButtonA->setStartValue(ui->pushButtonA->geometry());\nanimatateButtonA->setEndValue(QRect(100, 150, 200, 300));\n```", "```cpp\nQSequentialAnimationGroup *group = new QSequentialAnimationGroup;\ngroup->addAnimation(animatateButtonA);\ngroup->addAnimation(animatateButtonB);\ngroup->addAnimation(animatateButtonC);\n```", "```cpp\nRectangle {\n\u00a0\u00a0\u00a0\u00a0id: rect\n\u00a0\u00a0\u00a0\u00a0width: 100; height: 100\n\u00a0\u00a0\u00a0\u00a0color: \"green\"\n\u00a0\u00a0\u00a0\u00a0PropertyAnimation on x { to: 200 }\n\u00a0\u00a0\u00a0\u00a0PropertyAnimation on y { to: 200 }\n}\n```", "```cpp\nimport QtQuick\nimport QtQuick.Window\nWindow {\n\u00a0\u00a0\u00a0\u00a0width: 640\n\u00a0\u00a0\u00a0\u00a0height: 480\n\u00a0\u00a0\u00a0\u00a0visible: true\n\u00a0\u00a0\u00a0\u00a0title: qsTr(\"Sequential Animation Demo\")\n\u00a0\u00a0\u00a0\u00a0Rectangle {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0anchors.centerIn: parent\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0width: 100; height: 100\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0radius: 50\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0color: \"red\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0SequentialAnimation on color {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ColorAnimation { to: \"red\"; duration: 1000 }\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ColorAnimation { to: \"yellow\"; duration: 1000 }\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ColorAnimation { to: \"green\"; duration: 1000 }\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0running:true\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0loops: Animation.Infinite\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0}\n}\n```", "```cpp\nimport QtQuick\nimport QtQuick.Window\nWindow {\n\u00a0\u00a0\u00a0\u00a0width: 640\n\u00a0\u00a0\u00a0\u00a0height: 480\n\u00a0\u00a0\u00a0\u00a0visible: true\n\u00a0\u00a0\u00a0\u00a0title: qsTr(\"Animation Demo\")\n\u00a0\u00a0\u00a0\u00a0Image {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0anchors.centerIn: parent\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0source: \"qrc:/logo.png\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0RotationAnimator on rotation {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0from: 0; to: 360;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0duration: 1000\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0running:true\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0loops: Animation.Infinite\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0}\n}\n```", "```cpp\nimport QtQml.StateMachine\n```", "```cpp\nRectangle {\n\u00a0\u00a0\u00a0\u00a0\u00a0id:led\n\u00a0\u00a0\u00a0\u00a0\u00a0anchors.centerIn: parent\n\u00a0\u00a0\u00a0\u00a0\u00a0width: 100\n\u00a0\u00a0\u00a0\u00a0\u00a0height: 100\n\u00a0\u00a0\u00a0\u00a0\u00a0radius: 50\n\u00a0\u00a0\u00a0\u00a0\u00a0color: \"green\"\n\u00a0\u00a0\u00a0\u00a0\u00a0state: \"OFF\"\n\u00a0\u00a0\u00a0\u00a0\u00a0MouseArea {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0anchors.fill: parent\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0onPressed: led.state = \"ON\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0onReleased: led.state = \"OFF\"\n\u00a0\u00a0\u00a0\u00a0}\n}\n```", "```cpp\nstates: [\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0State {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0name: \"ON\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0PropertyChanges { target: led; color: \"red\"}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0},\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0State {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0name: \"OFF\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0PropertyChanges { target: led; color: \"green\"}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0]\n```", "```cpp\ntransitions: [\n\u00a0\u00a0\u00a0\u00a0Transition {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0from: \"ON\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0to: \"OFF\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ColorAnimation { target: led; duration: 100}\n\u00a0\u00a0\u00a0\u00a0\u00a0},\n\u00a0\u00a0\u00a0\u00a0\u00a0Transition {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0from: \"OFF\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0to: \"ON\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ColorAnimation { target: led; duration: 100}\n\u00a0\u00a0\u00a0\u00a0\u00a0}\n]\n```", "```cpp\ntransitions: Transition {\n\u00a0\u00a0\u00a0\u00a0to: \"*\"\n\u00a0\u00a0\u00a0\u00a0ColorAnimation { target: led; duration: 100 }\n}\n```", "```cpp\nQT += statemachine\n```", "```cpp\nfind_package(Qt6 COMPONENTS StateMachine REQUIRED)\ntarget_link_libraries(mytarget PRIVATE Qt6::StateMachine)\n```", "```cpp\n#include <QStateMachine>\n#include <QState>\n```", "```cpp\n    QState *green = new QState();\n    green->assignProperty(ui->pushButton, \"text\", \"Green\");\n    green->assignProperty(ui->led, \n    \"styleSheet\",\"background-color: rgb(0, 190, 0);\");\n    green->setObjectName(\"GREEN\");\n    ```", "```cpp\n    QState *red = new QState();\n    red->setObjectName(\"RED\");\n    red->assignProperty(ui->pushButton, \"text\", \"Red\");\n    red->assignProperty(ui->led, \"styleSheet\", \"background-color: rgb(255, 0, 0);\");\n    ```", "```cpp\n    green->addTransition(ui->pushButton,\u00a0\u00a0\n    &QAbstractButton::clicked,red);\n    red->addTransition(ui->pushButton,\n    &QAbstractButton::clicked,green);\n    ```", "```cpp\n    QStateMachine *machine = new QStateMachine(this);\n    machine->addState(green);\n    machine->addState(red);\n    machine->setInitialState(green);\n    ```", "```cpp\n    machine->start();\n    ```"]