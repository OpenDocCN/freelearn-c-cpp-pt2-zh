["```cpp\n#include <QDebug>\n```", "```cpp\nint value = 500;\nqDebug() << \"The value is : \" << value;\n```", "```cpp\nThe value is : 500\n```", "```cpp\nconsole.log(\"Value is:\", value)\n```", "```cpp\nComponents.onCompleted: { \n\u00a0\u00a0\u00a0\u00a0\u00a0console.log(\"Component created\") \n}\n```", "```cpp\nconsole.assert(value == 100, \"Reached the maximum limit\");\n```", "```cpp\nQT += core testlib\n```", "```cpp\n#include <QTest>\n```", "```cpp\nQT += testlib\nQT -= gui\nCONFIG += qt console warn_on depend_includepath testcase\nCONFIG -= app_bundle\nTEMPLATE = app\nSOURCES +=\u00a0\u00a0tst_testclass.cpp\n```", "```cpp\n#include <QtTest>\nclass TestClass : public QObject\n{\n\u00a0\u00a0\u00a0\u00a0Q_OBJECT\npublic:\n\u00a0\u00a0\u00a0\u00a0TestClass() {}\n\u00a0\u00a0\u00a0\u00a0~TestClass(){}\nprivate slots:\n\u00a0\u00a0\u00a0\u00a0void initTestCase(){}\n\u00a0\u00a0\u00a0\u00a0void cleanupTestCase() {}\n\u00a0\u00a0\u00a0\u00a0void test_compareStrings();\n\u00a0\u00a0\u00a0\u00a0void test_compareValues();\n};\n```", "```cpp\nvoid TestClass::test_compareStrings()\n{\n\u00a0\u00a0\u00a0\u00a0QString string1 = QLatin1String(\"Apple\");\n\u00a0\u00a0\u00a0\u00a0QString string2 = QLatin1String(\"Orange\");\n\u00a0\u00a0\u00a0\u00a0QCOMPARE(string1.localeAwareCompare(string2), 0);\n}\nvoid TestClass::test_compareValues()\n{\n\u00a0\u00a0\u00a0\u00a0int a = 10;\n\u00a0\u00a0\u00a0\u00a0int b = 20;\n\u00a0\u00a0\u00a0\u00a0int result = a + b;\n\u00a0\u00a0\u00a0\u00a0QCOMPARE(result,30);\n}\n```", "```cpp\nQTEST_APPLESS_MAIN(TestClass)\n#include \"tst_testclass.moc\"\n```", "```cpp\n********* Start testing of TestClass *********\nConfig: Using QtTest library 6.1.0, Qt 6.1.0 (x86_64-little_endian-llp64 shared (dynamic) release build; by GCC 8.1.0), windows 10\n64bit HCBT_CREATEWND event start\nPASS\u00a0\u00a0\u00a0: TestClass::initTestCase()\nFAIL!\u00a0\u00a0: TestClass::test_compareStrings() Compared values are not the same\n\u00a0\u00a0\u00a0Actual\u00a0\u00a0\u00a0(string1.localeAwareCompare(string2)): -1\n\u00a0\u00a0\u00a0Expected (0)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0: 0\n..\\TestProject\\tst_testclass.cpp(26) : failure location\nPASS\u00a0\u00a0\u00a0: TestClass::test_compareValues()\nPASS\u00a0\u00a0\u00a0: TestClass::cleanupTestCase()\nTotals: 3 passed, 1 failed, 0 skipped, 0 blacklisted, 7ms\n********* Finished testing of TestClass *********\n```", "```cpp\nQTest::keyClicks(testLineEdit, \"Enter\");\nQCOMPARE(testLineEdit->text(), QString(\"Enter\"));\n```", "```cpp\nQTest::mouseClick(testPushBtn, Qt::LeftButton);\n```", "```cpp\n    #include \"gtest/gtest.h\"\n    ```", "```cpp\n    #include \"tst_calculations.h\"\n    #include \"gtest/gtest.h\"\n    int main(int argc,char *argv[])\n    {\n    \u00a0\u00a0\u00a0\u00a0::testing::InitGoogleTest(&argc,argv);\n    \u00a0\u00a0\u00a0\u00a0return RUN_ALL_TESTS();\n    }\n    ```", "```cpp\n    TEST(TestCaseName, TestName) { //test logic }\n    ```", "```cpp\n    ASSERT_TRUE(condition)\n    ASSERT_EQ(expected,actual)\n    ASSERT_FLOAT_EQ(expected,actual)\n    EXPECT_DOUBLE_EQ (expected, actual)\n    ```", "```cpp\n    TEST_F(TestFixtureName, TestName) { //test logic }\n    ```", "```cpp\n    class PushButtonTests: public ::testing::Test\n    {\n    protected:\n    \u00a0\u00a0\u00a0\u00a0virtual void SetUp()\n    \u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0pushButton = new MyPushButton(0);\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0pushButton ->setText(\"My button\");\n    \u00a0\u00a0\u00a0\u00a0}\n    };\n    TEST_F(PushButtonTests, sizeConstraints)\n    {\n    \u00a0\u00a0\u00a0\u00a0EXPECT_EQ(40, pushButton->height());\n    \u00a0\u00a0\u00a0\u00a0EXPECT_EQ(200, pushButton->width());\n    \u00a0\u00a0\u00a0\u00a0pushButton->resize(300,300);\n    \u00a0\u00a0\u00a0\u00a0EXPECT_EQ(40, pushButton->height());\n    \u00a0\u00a0\u00a0\u00a0EXPECT_EQ(200, pushButton->width());\n    }\n    TEST_F(PushButtonTests, enterKeyPressed)\n    {\n    \u00a0\u00a0\u00a0\u00a0QSignalSpy spy(pushButton, SIGNAL(clicked()));\n    \u00a0\u00a0\u00a0\u00a0QTest::keyClick(pushButton, Qt::Key_Enter);\n    \u00a0\u00a0\u00a0\u00a0EXPECT_EQ(spy.count(), 1);\n    }\n    ```", "```cpp\n#include <QtQuickTest>\nQUICK_TEST_MAIN(testqml)\n```", "```cpp\nQT += qmltest\nTEMPLATE = app\nTARGET = tst_calculations\nCONFIG += qmltestcase\nSOURCES += testqml.cpp\n```", "```cpp\nimport QtQuick\nimport QtTest\nTestCase {\n\u00a0\u00a0\u00a0\u00a0name: \"Logic Tests\"\n\u00a0\u00a0\u00a0\u00a0function test_addition() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0compare(4 + 4, 8, \"Logic: 4 + 4 = 8\")\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0function test_subtraction() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0compare(9 - 5, 4, \"Logic: 9 - 5 = 4\")\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0function test_multiplication() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0compare(3 * 3, 6, \"Logic: 3 * 3 = 6\")\n\u00a0\u00a0\u00a0\u00a0}\n}\n```", "```cpp\n********* Start testing of testqml *********\nConfig: Using QtTest library 6.1.0, Qt 6.1.0 (x86_64-little_endian-llp64 shared (dynamic) release build; by GCC 8.1.0), windows 10\nPASS\u00a0\u00a0\u00a0: testqml::Logic Tests::initTestCase()\nPASS\u00a0\u00a0\u00a0: testqml::Logic Tests::test_addition()\nFAIL!\u00a0\u00a0: testqml::Logic Tests::test_multiplication()Logic: 3 * 3 = 6\n\u00a0\u00a0\u00a0Actual\u00a0\u00a0\u00a0(): 9\n\u00a0\u00a0\u00a0Expected (): 6\nC:\\Qt6Book\\Chapter09\\QMLTestDemo\\tst_calculations.qml(15) : failure location\nPASS\u00a0\u00a0\u00a0: testqml::Logic Tests::test_subtraction()\nPASS\u00a0\u00a0\u00a0: testqml::Logic Tests::cleanupTestCase()\nTotals: 4 passed, 1 failed, 0 skipped, 0 blacklisted, 3ms\n********* Finished testing of testqml *********\n```", "```cpp\nimport QtQuick\nimport QtTest\nTestCase {\n\u00a0\u00a0\u00a0\u00a0name: \"DataDrivenTests\"\n\u00a0\u00a0\u00a0\u00a0function test_table_data() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return [\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{tag: \"10 + 20 = 30\", a: 10, b: 20, result: 30\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n},\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{tag: \"30 + 60 = 90\", a: 30, b: 60, result: 90\u00a0\u00a0\n},\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{tag: \"50 + 50 = 100\", a: 50, b: 50, result: 50 \n},\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0]\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0function test_table(data) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0compare(data.a + data.b, data.result)\n\u00a0\u00a0\u00a0\u00a0}\n}\n```", "```cpp\n********* Start testing of main *********\nConfig: Using QtTest library 6.1.0, Qt 6.1.0 (x86_64-little_endian-llp64 shared (dynamic) release build; by GCC 8.1.0), windows 10\nPASS\u00a0\u00a0\u00a0: main::DataDrivenTests::initTestCase()\nPASS\u00a0\u00a0\u00a0: main::DataDrivenTests::test_table(10 + 20 = 30)\nPASS\u00a0\u00a0\u00a0: main::DataDrivenTests::test_table(30 + 60 = 90)\nFAIL!\u00a0\u00a0: main::DataDrivenTests::test_table(50 + 50 = 100) Compared values are not the same\n\u00a0\u00a0\u00a0Actual\u00a0\u00a0\u00a0(): 100\n\u00a0\u00a0\u00a0Expected (): 50\nC:\\Qt6Book\\Chapter09\\QMLDataDrivenTestDemo\\tst_datadriventests.qml(14) : failure location\nPASS\u00a0\u00a0\u00a0: main::DataDrivenTests::cleanupTestCase()\nTotals: 4 passed, 1 failed, 0 skipped, 0 blacklisted, 3ms\n********* Finished testing of main *********\n```", "```cpp\nimport QtQuick\nimport QtTest\nTestCase {\n\u00a0\u00a0\u00a0\u00a0id: testObject\n\u00a0\u00a0\u00a0\u00a0name: \"BenchmarkingMyItem\"\n\u00a0\u00a0\u00a0\u00a0function benchmark_once_create_component() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0var component = Qt.createComponent(\"MyItem.qml\")\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0var testObject = component.createObject(testObject)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0testObject.destroy()\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0component.destroy()\n\u00a0\u00a0\u00a0\u00a0}\n}\n```", "```cpp\n********* Start testing of testqml *********\nConfig: Using QtTest library 6.1.0, Qt 6.1.0 (x86_64-little_endian-llp64 shared (dynamic) release build; by GCC 8.1.0), windows 10\nPASS\u00a0\u00a0\u00a0: testqml::BenchmarkingMyItem::initTestCase()\nPASS\u00a0\u00a0\u00a0: testqml::BenchmarkingMyItem::benchmark_once_create_component()\nPASS\u00a0\u00a0\u00a0: testqml::BenchmarkingMyItem::benchmark_once_create_component()\nRESULT : testqml::benchmark_once_create_component:\n\u00a0\u00a0\u00a0\u00a0\u00a00 msecs per iteration (total: 0, iterations: 1)\nPASS\u00a0\u00a0\u00a0: testqml::BenchmarkingMyItem::cleanupTestCase()\nQWARN\u00a0\u00a0: testqml::UnknownTestFunc() QQmlEngine::setContextForObject(): Object already has a QQmlContext\nTotals: 4 passed, 0 failed, 0 skipped, 0 blacklisted, 5ms\n********* Finished testing of testqml *********\n```", "```cpp\nimport QtQuick\nimport QtTest\nMouseArea {\n\u00a0\u00a0\u00a0\u00a0width: 100; height: 100\n\u00a0\u00a0\u00a0\u00a0TestCase {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0name: \"TestRightKeyPress\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0when: windowShown\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0function test_key_click() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0keyClick(Qt.Key_Right)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0}\n}\n```", "```cpp\n********* Start testing of testqml *********\nConfig: Using QtTest library 6.1.0, Qt 6.1.0 (x86_64-little_endian-llp64 shared (dynamic) release build; by GCC 8.1.0), windows 10\nPASS\u00a0\u00a0\u00a0: testqml::TestRightKeyPress::initTestCase()\nQWARN\u00a0\u00a0: testqml::TestRightKeyPress::test_key_click() QQmlEngine::setContextForObject(): Object already has a QQmlContext\nPASS\u00a0\u00a0\u00a0: testqml::TestRightKeyPress::test_key_click()\nPASS\u00a0\u00a0\u00a0: testqml::TestRightKeyPress::cleanupTestCase()\nTotals: 3 passed, 0 failed, 0 skipped, 0 blacklisted, 25ms\n********* Finished testing of testqml *********\n```", "```cpp\nimport QtQuick\nimport QtQuick.Controls\nimport QtTest\nButton {\n\u00a0\u00a0\u00a0\u00a0id: pushButton\n\u00a0\u00a0\u00a0\u00a0SignalSpy {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0id: clickSpy\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0target: pushButton\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0signalName: \"clicked\"\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0TestCase {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0name: \"PushButton\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0function test_click() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0compare(clickSpy.count, 0)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0pushButton.clicked();\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0compare(clickSpy.count, 1)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0}\n}\n```", "```cpp\n********* Start testing of testqml *********\nConfig: Using QtTest library 6.1.0, Qt 6.1.0 (x86_64-little_endian-llp64 shared (dynamic) release build; by GCC 8.1.0), windows 10\nPASS\u00a0\u00a0\u00a0: testqml::PushButton::initTestCase()\nPASS\u00a0\u00a0\u00a0: testqml::PushButton::test_click()\nPASS\u00a0\u00a0\u00a0: testqml::PushButton::cleanupTestCase()\nTotals: 3 passed, 0 failed, 0 skipped, 0 blacklisted, 5ms\n********* Finished testing of testqml *********\n```", "```cpp\nRectangle {\n\u00a0\u00a0\u00a0\u00a0id: container\n\u00a0\u00a0\u00a0\u00a0anchors {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0left: parent.left\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0leftMargin: 100\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0right: parent.right\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0top: parent.top\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0bottom: parent.bottom\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0Rectangle {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0anchors.fill : parent\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0color: \"transparent\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0border.color: \"blue\"\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0Text {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0text: \" Sample text\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0anchors.centerIn: parent\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Rectangle {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0anchors.fill : parent\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0color: \"transparent\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0border.color: \"red\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0}\n}\n```", "```cpp\nclick('<window name>','<button name>')\n```", "```cpp\ngetslidervalue('<window name>','<slider name>')\n```", "```cpp\nButton {\n\u00a0\u00a0\u00a0\u00a0\u00a0id: quitButton\n\u00a0\u00a0\u00a0\u00a0\u00a0objectName: \"quitButton\"\n\u00a0\u00a0\u00a0\u00a0\u00a0Accessible.name: objectName \n}\n```", "```cpp\n>click('Example','quitButton')\n```"]