["```cpp\nQMetaObject::Connection QObject::connect(\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0const QObject *senderObject, const char *signalName, \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0const QObject *receiverObject, const char *slotName, \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Qt::ConnectionType type = Qt::AutoConnection)\n```", "```cpp\nQObject::connect(this, SIGNAL(signalName()), \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this, SLOT(slotName()));\n```", "```cpp\nconnect(sender, &MyClass::signalName, this, \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0&MyClass::slotName);\n```", "```cpp\nconnect(sender, &MyClass::signalName, this, [=]()\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ sender->doSomething(); });\n```", "```cpp\nconnect(sender, SIGNAL(signalName(int)), this, \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0SLOT(slotName(int)));\nconnect(sender, SIGNAL(signalName(int)), this, \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0SLOT(slotName()));\nconnect(sender, SIGNAL(signalName()), this, \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0SLOT(slotName()));\n```", "```cpp\nconnect(sender, SIGNAL(signalName()), this, \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0SLOT(slotName(int)));\n```", "```cpp\n CONFIG += no_keywords\n```", "```cpp\n#ifndef MYCLASS_H\n#define MYCLASS_H\n#include <QObject>\nclass MyClass : public QObject\n{\n\u00a0\u00a0\u00a0\u00a0Q_OBJECT\npublic:\n\u00a0\u00a0\u00a0\u00a0explicit MyClass(QObject *parent = nullptr);\nsignals:\n\u00a0\u00a0\u00a0\u00a0void signalName();\npublic slots:\n\u00a0\u00a0\u00a0\u00a0void slotName();\n};\n#endif // MYCLASS_H\n```", "```cpp\n#include \"myclass.h\"\n#include <QDebug>\nMyClass::MyClass(QObject *parent) : QObject(parent)\n{\n\u00a0\u00a0\u00a0\u00a0QObject::connect(this, SIGNAL(signalName()), \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this, SLOT(slotName()));\n\u00a0\u00a0\u00a0\u00a0emit signalName();\n}\nvoid MyClass::slotName()\n{\n\u00a0\u00a0\u00a0\u00a0qDebug()<< \"Slot called!\";\n}\n```", "```cpp\nconnect(this, &MyClass::signalName, this, \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0&MyClass::slotName);\n```", "```cpp\n\u00a0\u00a0\u00a0\u00a0QObject::connect(this, SIGNAL(signalX()),this, \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0SLOT(slotA()));\n\u00a0\u00a0\u00a0\u00a0QObject::connect(this, SIGNAL(signalX()),this, \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0SLOT(slotB()));\n\u00a0\u00a0\u00a0\u00a0QObject::connect(this, SIGNAL(signalX()),this, \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0SLOT(slotC()));\n```", "```cpp\nconnect(this, &MyClass:: signalX, this, &MyClass:: slotA);\nconnect(this, &MyClass:: signalX, this, &MyClass:: slotB);\nconnect(this, &MyClass:: signalX, this, &MyClass:: slotC);\n```", "```cpp\n\u00a0\u00a0\u00a0\u00a0QObject::connect(this, SIGNAL(signalX()),this, \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0SLOT(slotX()));\n\u00a0\u00a0\u00a0\u00a0QObject::connect(this, SIGNAL(signalY()),this, \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0SLOT(slotX()));\n\u00a0\u00a0\u00a0\u00a0QObject::connect(this, SIGNAL(signalZ()),this, \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0SLOT(slotX()));\n```", "```cpp\nconnect(sender, SIGNAL(signalA()),forwarder, \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0SIGNAL(signalB())));\n```", "```cpp\nconnect(sender,&ClassName::signalA,forwarder,&ClassName::\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0signalB);\n```", "```cpp\n#include <QWidget>\nclass QPushButton;\nclass MyClass : public QWidget\n{\n\u00a0\u00a0\u00a0\u00a0Q_OBJECT\npublic:\n\u00a0\u00a0\u00a0\u00a0MyClass(QWidget *parent = nullptr);\n\u00a0\u00a0\u00a0\u00a0~MyClass();\nsignals:\n\u00a0\u00a0\u00a0\u00a0\u00a0void signalName();\n private:\n\u00a0\u00a0\u00a0\u00a0\u00a0QPushButton *myButton;\n};\nMyClass::MyClass(QWidget *parent)\n\u00a0\u00a0\u00a0\u00a0: QWidget(parent)\n{\n\u00a0\u00a0\u00a0\u00a0myButton = new QPushButton(this);\n\u00a0\u00a0\u00a0\u00a0connect(myButton, &QPushButton::clicked,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this, &MyClass::signalName);\n} \n```", "```cpp\n#include <memory>\n#include \"../../SignalSlotDemo/myclass.h\"\n#include <QtCore/qbytearray.h>\n#include <QtCore/qmetatype.h>\n#if !defined(Q_MOC_OUTPUT_REVISION)\n#error \"The header file 'myclass.h' doesn't include \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<QObject>.\"\n#elif Q_MOC_OUTPUT_REVISION != 68\n#error \"This file was generated using the moc from 6.0.2\\. \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0It\"\n#error \"cannot be used with the include files from this \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0version of Qt.\"\n#error \"(The moc has changed too much.)\"\n#endif\n```", "```cpp\nstatic const uint qt_meta_data_MyClass[] = {\n // content:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a09,\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// revision\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a00,\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// classname\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a00,\u00a0\u00a0\u00a0\u00a00, // classinfo\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a02,\u00a0\u00a0\u00a014, // methods\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a00,\u00a0\u00a0\u00a0\u00a00, // properties\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a00,\u00a0\u00a0\u00a0\u00a00, // enums/sets\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a00,\u00a0\u00a0\u00a0\u00a00, // constructors\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a00,\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// flags\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a01,\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// signalCount\n // signals: name, argc, parameters, tag, flags, initial \n // metatype offsets\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a01,\u00a0\u00a0\u00a0\u00a00,\u00a0\u00a0\u00a026,\u00a0\u00a0\u00a0\u00a02, 0x06,\u00a0\u00a0\u00a0\u00a00 /* Public */,\n // slots: name, argc, parameters, tag, flags, initial \n // metatype offsets\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a03,\u00a0\u00a0\u00a0\u00a00,\u00a0\u00a0\u00a027,\u00a0\u00a0\u00a0\u00a02, 0x0a,\u00a0\u00a0\u00a0\u00a01 /* Public */,\n // signals: parameters\n\u00a0\u00a0\u00a0\u00a0QMetaType::Void,\n // slots: parameters\n\u00a0\u00a0\u00a0\u00a0QMetaType::Void,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a00\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// eod\n};\n```", "```cpp\nconst QMetaObject *MyClass::metaObject() const\n{\n\u00a0\u00a0\u00a0\u00a0return QObject::d_ptr->metaObject \n? QObject::d_ptr->dynamicMetaObject() \n: &staticMetaObject;\n}\n```", "```cpp\nvoid *MyClass::qt_metacast(const char *_clname)\n{\n\u00a0\u00a0\u00a0\u00a0if (!_clname) return nullptr;\n\u00a0\u00a0\u00a0\u00a0if (!strcmp(_clname, \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0qt_meta_stringdata_MyClass.stringdata0))\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return static_cast<void*>(this);\n\u00a0\u00a0\u00a0\u00a0return QObject::qt_metacast(_clname);\n}\n```", "```cpp\nint MyClass::qt_metacall(QMetaObject::Call _c, int _id, void **_a)\n{\n\u00a0\u00a0\u00a0\u00a0_id = QObject::qt_metacall(_c, _id, _a);\n\u00a0\u00a0\u00a0\u00a0if (_id < 0)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return _id;\n\u00a0\u00a0\u00a0\u00a0if (_c == QMetaObject::InvokeMetaMethod) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if (_id < 2)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0qt_static_metacall(this, _c, _id, _a);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0_id -= 2;\n\u00a0\u00a0\u00a0\u00a0} else if (_c == QMetaObject::\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0RegisterMethodArgumentMetaType) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if (_id < 2)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0*reinterpret_cast<QMetaType *>(_a[0]) = \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0QMetaType();\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0_id -= 2;\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0return _id;\n}\n```", "```cpp\nvoid MyClass::signalName()\n{\n\u00a0\u00a0\u00a0\u00a0QMetaObject::activate(this, &staticMetaObject, 0, \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0nullptr);\n}\n```", "```cpp\nvoid MyClass::qt_static_metacall(QObject *_o, \n\u00a0\u00a0\u00a0\u00a0QMetaObject::Call _c, int _id, void **_a)\n{\n\u00a0\u00a0\u00a0\u00a0if (_c == QMetaObject::InvokeMetaMethod) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0auto *_t = static_cast<MyClass *>(_o);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0(void)_t;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0switch (_id) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0case 0: _t->signalName(); break;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0case 1: _t->slotName(); break;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0default: ;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0} else if (_c == QMetaObject::IndexOfMethod) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0int *result = reinterpret_cast<int *>(_a[0]);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0using _t = void (MyClass::*)();\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if (*reinterpret_cast<_t *>(_a[1]) == \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0static_cast<_t>(&MyClass::signalName)) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0*result = 0;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0(void)_a;\n}\n```", "```cpp\nbool QObject::isSignalConnected(const QMetaMethod &signal) const\n```", "```cpp\nQ_PROPERTY(type variableName READ getterFunction \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0WRITE setterFunction\u00a0\u00a0NOTIFY signalName)\n```", "```cpp\n\u00a0\u00a0\u00a0\u00a0\u00a0Q_PROPERTY(QString text MEMBER m_text NOTIFY \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0textChanged)\nsignals:\n\u00a0\u00a0\u00a0\u00a0\u00a0void textChanged(const QString &newText);\nprivate:\n\u00a0\u00a0\u00a0\u00a0\u00a0QString m_text;\n```", "```cpp\nclass MyClass : public QWidget\n{\n\u00a0\u00a0\u00a0\u00a0Q_OBJECT\n\u00a0\u00a0\u00a0\u00a0Q_PROPERTY(QString version READ version WRITE \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0setVersion NOTIFY versionChanged)\npublic:\n\u00a0\u00a0\u00a0\u00a0MyClass(QWidget *parent = nullptr);\n\u00a0\u00a0\u00a0\u00a0~MyClass();\n\u00a0\u00a0\u00a0\u00a0void setVersion(QString version)\n\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0m_version = version;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0emit versionChanged(version);\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0QString version() const { return m_version; }\n\u00a0\u00a0\u00a0\u00a0signals:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0void versionChanged(QString version);\n\u00a0\u00a0\u00a0\u00a0private:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0QString m_version;\n};\n```", "```cpp\nint main(int argc, char *argv[])\n{\n\u00a0\u00a0\u00a0\u00a0QApplication a(argc, argv);\n\u00a0\u00a0\u00a0\u00a0MyClass myClass;\n\u00a0\u00a0\u00a0\u00a0myClass.setVersion(\"v1.0\");\n\u00a0\u00a0\u00a0\u00a0myClass.show();\n\u00a0\u00a0\u00a0\u00a0return a.exec();\n}\n```", "```cpp\nQObject *object = &myClass;\nobject->setProperty(\"version\", \"v1.0\");\n```", "```cpp\nonSignalName : {\n//Logic\n}\n```", "```cpp\nsignal <name>[([<type> <parameter name>[...]])]\n```", "```cpp\nsignal composeMessage(string message)\n```", "```cpp\nRectangle {\n\u00a0\u00a0\u00a0\u00a0id: mailBox\n\u00a0\u00a0\u00a0\u00a0signal composeMessage(string message)\n\u00a0\u00a0\u00a0\u00a0anchors.fill: parent\n\u00a0\u00a0\u00a0\u00a0Button {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0id:sendButton\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0anchors.centerIn: parent\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0width: 100\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0height: 50\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0text: \"Send\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0onClicked:\u00a0\u00a0mailBox.composeMessage(\"Hello World!\")\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0onComposeMessage: {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0console.log(\"Message Received\",message)\n\u00a0\u00a0\u00a0\u00a0}\n}\n```", "```cpp\nRectangle {\n\u00a0\u00a0\u00a0\u00a0id: mailBox\n\u00a0\u00a0\u00a0\u00a0signal composeMessage(string message)\n\u00a0\u00a0\u00a0\u00a0anchors.fill: parent\n\u00a0\u00a0\u00a0\u00a0Text {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0id: textElement\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0anchors {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0top:\u00a0\u00a0parent.top\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0left: parent.left\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0right:parent.right\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0width: 100\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0height:50\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0text: \"\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0horizontalAlignment: Text.AlignHCenter\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0Component.onCompleted: {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0mailBox.composeMessage.connect(transmitMessage)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0mailBox.composeMessage(\"Hello World!\")\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0function transmitMessage(message) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0console.log(\"Received message: \" + message)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0textElement.text = message\n\u00a0\u00a0\u00a0\u00a0}\n}\n```", "```cpp\nsender.signalName.connect(receiver.slotName)\n```", "```cpp\nsender.signalName.disconnect(receiver.slotName)\n```", "```cpp\nRectangle {\n\u00a0\u00a0\u00a0\u00a0id: mailBox\n\u00a0\u00a0\u00a0\u00a0signal forwardButtonClick()\n\u00a0\u00a0\u00a0\u00a0anchors.fill: parent\n\u00a0\u00a0\u00a0\u00a0Button {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0id:sendButton\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0anchors.centerIn: parent\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0width: 100\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0height: 50\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0text: \"Send\"\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0onForwardButtonClick: {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0console.log(\"Fordwarded Button Click Signal!\")\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0Component.onCompleted: {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0sendButton.clicked.connect(forwardButtonClick)\n\u00a0\u00a0\u00a0\u00a0}\n}\n```", "```cpp\nonClicked: {\n\u00a0\u00a0\u00a0\u00a0mailBox.forwardButtonClick()\n}\n```", "```cpp\n[default] property <propertyType> <propertyName> : <value>\n```", "```cpp\nproperty string version: \"v1.0\"\n```", "```cpp\nonVersionChanged:{\u2026}\n```", "```cpp\nwidth: parent.width\n```", "```cpp\nproperty string version: myClass.version\n```", "```cpp\nclass CPPBackend : public QObject\n{\n\u00a0\u00a0\u00a0\u00a0Q_OBJECT\n\u00a0\u00a0\u00a0\u00a0Q_PROPERTY(int counter READ counter WRITE setCounter \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0NOTIFY counterChanged)\npublic:\n\u00a0\u00a0\u00a0\u00a0explicit CPPBackend(QObject *parent = nullptr);\n\u00a0\u00a0\u00a0\u00a0\u00a0Q_INVOKABLE\u00a0\u00a0void receiveFromQml();\n\u00a0\u00a0\u00a0\u00a0int counter() const;\n\u00a0\u00a0\u00a0\u00a0void setCounter(int counter);\nsignals:\n\u00a0\u00a0\u00a0\u00a0void sendToQml(int);\n\u00a0\u00a0\u00a0\u00a0void counterChanged(int counter);\nprivate:\n\u00a0\u00a0\u00a0\u00a0int m_counter = 0;\n};\n```", "```cpp\nvoid CPPBackend::setCounter(int counter)\n{\n\u00a0\u00a0\u00a0\u00a0if (m_counter == counter)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return;\n\u00a0\u00a0\u00a0\u00a0m_counter = counter;\n\u00a0\u00a0\u00a0\u00a0emit counterChanged(m_counter);\n}\nvoid CPPBackend::receiveFromQml()\n{\n\u00a0\u00a0\u00a0\u00a0// We increase the counter and send a signal with new \n\u00a0\u00a0\u00a0\u00a0// value\n\u00a0\u00a0\u00a0\u00a0++m_counter;\n\u00a0\u00a0\u00a0\u00a0emit sendToQml(m_counter);\n}\n```", "```cpp\nWindow {\n\u00a0\u00a0\u00a0\u00a0width: 640\n\u00a0\u00a0\u00a0\u00a0height: 480\n\u00a0\u00a0\u00a0\u00a0visible: true\n\u00a0\u00a0\u00a0\u00a0title: qsTr(\"C++ QML Signals & Slots Demo\")\n\u00a0\u00a0\u00a0\u00a0property int count: cppBackend.counter\n\u00a0\u00a0\u00a0\u00a0onCountChanged:{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0console.log(\"property is notified. Updated value \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0is:\",count)\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0Connections {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0target: cppBackend\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0onSendToQml: {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0labelCount.text =\"Fetched value is \" \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0+cppBackend.counter\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0Row{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0anchors.centerIn: parent\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0spacing: 20\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Text {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0id: labelCount\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0text: \"Fetched value is \" + cppBackend.counter\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Button {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0text: qsTr(\"Fetch\")\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0width: 100 ;height: 20\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0onClicked: {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0cppBackend.receiveFromQml()\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0}\n}\n```", "```cpp\nwhile(true) \n{\n\u00a0\u00a0dispatchEventsFromQueue();\n\u00a0\u00a0waitForEvents();\n}\n```", "```cpp\nvoid MyClass::mousePressEvent(QMouseEvent *event)\n{\n\u00a0\u00a0\u00a0\u00a0if (event->button() == Qt::LeftButton) \n\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// Handle left mouse button here\n\u00a0\u00a0\u00a0\u00a0} \n\u00a0\u00a0\u00a0\u00a0else \n\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0QWidget::mousePressEvent(event);\n\u00a0\u00a0\u00a0\u00a0}\n}\n```", "```cpp\n#include <QWidget>\n#include <QEvent>\nclass MyCustomEvent : public QEvent\n{\npublic:\n\u00a0\u00a0\u00a0\u00a0static const QEvent::Type MyEvent \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0= QEvent::Type(QEvent::User + 1);\n};\nclass MyClass : public QWidget\n{\n\u00a0\u00a0\u00a0\u00a0Q_OBJECT\npublic:\n\u00a0\u00a0\u00a0\u00a0MyClass(QWidget *parent = nullptr);\n\u00a0\u00a0\u00a0\u00a0~MyClass();\nprotected:\n\u00a0\u00a0\u00a0\u00a0bool event(QEvent *event);\n}; \n```", "```cpp\nbool MyClass::event(QEvent *event)\n{\n\u00a0\u00a0\u00a0\u00a0if (event->type() == QEvent::KeyPress)\n\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0QKeyEvent *keyEvent= static_cast<QKeyEvent \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0*>(event);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if (keyEvent->key() == Qt::Key_Enter)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// Handle Enter event event\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return true;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0else if (event->type() == MyCustomEvent::MyEvent)\n\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0MyCustomEvent *myEvent = static_cast<MyCustomEvent \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0*>(event);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// Handle custom event\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return true;\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0return QWidget::event(event);\n}\n```", "```cpp\n#include <QMainWindow>\nclass QTextEdit;\nclass MainWindow : public QMainWindow\n{\n\u00a0\u00a0\u00a0\u00a0Q_OBJECT\npublic:\n\u00a0\u00a0\u00a0\u00a0MainWindow(QWidget *parent = nullptr);\n\u00a0\u00a0\u00a0\u00a0~MainWindow();\nprotected:\n\u00a0\u00a0\u00a0\u00a0bool eventFilter(QObject *obj, QEvent *event) override;\nprivate:\n\u00a0\u00a0\u00a0\u00a0QTextEdit *textEdit;\n};\n```", "```cpp\n#include \"mainwindow.h\"\n#include <QTextEdit>\n#include <QKeyEvent>\nMainWindow::MainWindow(QWidget *parent)\n\u00a0\u00a0\u00a0\u00a0: QMainWindow(parent)\n{\n\u00a0\u00a0\u00a0\u00a0textEdit = new QTextEdit;\n\u00a0\u00a0\u00a0\u00a0setCentralWidget(textEdit);\n\u00a0\u00a0\u00a0\u00a0textEdit->installEventFilter(this);\n}\n```", "```cpp\nbool MainWindow::eventFilter(QObject *monitoredObj, QEvent *event)\n{\n\u00a0\u00a0\u00a0\u00a0if (monitoredObj == textEdit)\n\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if (event->type() == QEvent::KeyPress)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0QKeyEvent *keyEvent = static_cast<QKeyEvent*>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0(event);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0qDebug() << \"Key Press detected: \" << \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0keyEvent->text();\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return true;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0else\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return false;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0else\n\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return QMainWindow::eventFilter(monitoredObj, \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0event);\n\u00a0\u00a0\u00a0\u00a0}\n}\n```", "```cpp\nvoid dragEnterEvent(QDragEnterEvent *event) override;\nvoid dragMoveEvent(QDragMoveEvent *event) override;\nvoid dropEvent(QDropEvent *event) override;\nvoid mousePressEvent(QMouseEvent *event) override;\n```", "```cpp\nsetAcceptDrops(true);\n```", "```cpp\nQMimeData *mimeData = new QMimeData;\nmimeData->setData(\"text/csv\", csvData);\nQDrag *dragObject = new QDrag(event->widget());\ndragObject->setMimeData(mimeData);\ndragObject->exec();\n```", "```cpp\nvoid QQuickItem::dragEnterEvent(QDragEnterEvent *event)\n```", "```cpp\nRectangle {\n\u00a0\u00a0\u00a0\u00a0id: dragItem\n\u00a0\u00a0\u00a0\u00a0property point beginDrag\n\u00a0\u00a0\u00a0\u00a0property bool caught: false\n\u00a0\u00a0\u00a0\u00a0x: 125; y: 275\n\u00a0\u00a0\u00a0\u00a0z: mouseArea.drag.active ||\u00a0\u00a0mouseArea.pressed ? 2 : 1\n\u00a0\u00a0\u00a0\u00a0width: 50; height: 50\n\u00a0\u00a0\u00a0\u00a0color: \"red\"\n\u00a0\u00a0\u00a0\u00a0Drag.active: mouseArea.drag.active\n\u00a0\u00a0\u00a0\u00a0Drag.hotSpot.x: 10 ; Drag.hotSpot.y: 10\n\u00a0\u00a0\u00a0\u00a0MouseArea {\n\u00a0\u00a0\u00a0\u00a0id: mouseArea\n\u00a0\u00a0\u00a0\u00a0anchors.fill: parent\n\u00a0\u00a0\u00a0\u00a0drag.target: parent\n\u00a0\u00a0\u00a0\u00a0onPressed: dragItem.beginDrag = Qt.point(dragItem.x, \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0dragItem.y)\n\u00a0\u00a0\u00a0\u00a0onReleased: {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if(!dragItem.caught) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0dragItem.x = dragItem.beginDrag.x\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0dragItem.y = dragItem.beginDrag.y\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0}\n}\n```", "```cpp\nRectangle {\n\u00a0\u00a0\u00a0\u00a0x: parent.width/2\n\u00a0\u00a0\u00a0\u00a0width: parent.width/2 ; height:parent.height\n\u00a0\u00a0\u00a0\u00a0color: \"lightblue\"\n\u00a0\u00a0\u00a0\u00a0DropArea {\n\u00a0\u00a0\u00a0\u00a0anchors.fill: parent\n\u00a0\u00a0\u00a0\u00a0onEntered: drag.source.caught = true\n\u00a0\u00a0\u00a0\u00a0onExited: drag.source.caught = false\n\u00a0\u00a0\u00a0\u00a0}\n}\n```"]