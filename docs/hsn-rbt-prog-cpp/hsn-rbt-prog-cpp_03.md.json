["```cpp\n$ sudo apt-get update \n```", "```cpp\n$ sudo apt-get upgrade\n```", "```cpp\n$ sudo apt-get install git-core\n```", "```cpp\ngit clone git://git.drogon.net/wiringPi\n```", "```cpp\n$ cd ~/wiringPi (The ~ symbol is above the Tab key and it points to pi directory)\n```", "```cpp\n$ git pull origin\n```", "```cpp\n$ ./build \n```", "```cpp\n#include <iostream>\n#include <wiringPi.h>\n\nint main(void)\n{\nwiringPiSetup();\npinMode(15,OUTPUT);\n\n for(;;)\n {\ndigitalWrite(15,HIGH);\ndelay(1000);\ndigitalWrite(15,LOW);\ndelay(1000);\n }\nreturn 0;\n }\n```", "```cpp\n#include <iostream>\n#include <wiringPi.h>\n\nint main(void)\n{\n\nwiringPiSetup();\n\npinMode(0,OUTPUT); \npinMode(8,INPUT); \n\nfor(;;)\n{\nint ldrstate = digitalRead(8); \nif(ldrstate == HIGH) \n{\ndigitalWrite(0,HIGH); \n}\nelse\n{\ndigitalWrite(0,LOW); \n}\n }\nreturn 0;\n }\n```", "```cpp\nsoftPwmCreate(pin number, initial duty cycle value, max duty cycle value);\n```", "```cpp\nsoftPwmWrite(pin number, duty cycle value);\n```", "```cpp\n#include <iostream>\n#include <wiringPi.h>\n#include <softPwm.h>\nint main(void)\n{\n wiringPiSetup();\n softPwmCreate (15, 0, 100) ;\n for(;;)\n {\n softPwmWrite (15, 25);\n delay(1000);\n softPwmWrite (15, 0);\n delay(1000);\n softPwmWrite (15, 50);\n delay(1000);\n softPwmWrite (15, 0);\n delay(1000);\n softPwmWrite (15, 100);\n delay(1000);\n softPwmWrite (15, 0);\n delay(1000);\n }\nreturn 0;\n }\n```"]