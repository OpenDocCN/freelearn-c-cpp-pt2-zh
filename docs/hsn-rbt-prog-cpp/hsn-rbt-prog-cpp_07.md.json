["```cpp\nsudo apt-get install libncurses5-dev libncursesw5-dev \n```", "```cpp\n#include <ncurses.h>\n...\nint main()\n{\n...\ninitscr();\n...\n...\nendwin();\nreturn 0;\n}\n```", "```cpp\n#include <ncurses.h>\n#include <stdio.h>\n\nint main()\n{\ninitscr(); //initializes and clear the screen\nint keypressed = getch(); \nif(keypressed == 'h' || keypressed == 'H')\n{\nprintw(\"Hello World\"); //will print Hello World message\n}\ngetch();\nrefresh(); \n\nendwin(); // frees up memory and ends ncurses\nreturn 0;\n}\n```", "```cpp\ncd Cprograms\n```", "```cpp\ngcc -o HelloWorld -lncurses HelloWorld.cpp \n```", "```cpp\ngcc -o Programname -lncurses Programname.cpp\n```", "```cpp\n#include <ncurses.h>\n#include <wiringPi.h>\n#include <stdio.h>\nint main()\n{\n wiringPiSetup();\n\n pinMode(15,OUTPUT); //LED 1 pin\n pinMode(4, OUTPUT); //LED 2 pin\n pinMode(27,OUTPUT); //Buzzer pin\n\nfor(;;){\n\ninitscr();\n\nint keypressed = getch();\n\nif(keypressed=='L' || keypressed=='l')\n{\n digitalWrite(15,HIGH);\n delay(1000);\n digitalWrite(15,LOW);\n delay(1000);\n}\n\nif(keypressed== 69 || keypressed=='e')       // 69 is ASCII number for E.\n{\n digitalWrite(4,HIGH);\n delay(1000);\n digitalWrite(4,LOW);\n delay(1000);\n}\n\nif(keypressed=='D' || keypressed=='d')\n{\n digitalWrite(15,HIGH);\n delay(1000);\n digitalWrite(15,LOW);\n delay(1000);\n digitalWrite(4,HIGH);\n delay(1000);\n digitalWrite(4,LOW);\n delay(1000);\n}\n\nif(keypressed=='B' || keypressed== 98)        //98 is ASCII number for b\n{\n digitalWrite(27,HIGH);\n delay(1000);\n digitalWrite(27,LOW);\n delay(1000);\n digitalWrite(27,HIGH);\n delay(1000);\n digitalWrite(27,LOW);\n delay(1000);\n}\n\nif(keypressed=='x' || keypressed =='X')\n{\nbreak; \n}\n\nrefresh();\n}\nendwin(); // \nreturn 0; \n}\n```", "```cpp\ngcc -o LEDBuzzer -lncurses -lwiringPi LEDBuzzer.cpp\n```", "```cpp\n\nint main()\n{\n...\nfor(;;)\n{\ninitscr(); \nkeypad(stdscr,TRUE);\nrefresh(); \nint keypressed = getch(); \nif(keypressed==KEY_UP || keypressed == 'W' || keypressed == 'w') \n//KEY_UP command is for UP arrow key\n{\nprintw(\"FORWARD\");\ndigitalWrite(0,HIGH);\ndigitalWrite(2,LOW);\ndigitalWrite(3,HIGH);\ndigitalWrite(4,LOW);\n}\nif(keypressed==KEY_DOWN || keypressed == 'X' || keypressed == 'x')\n//KEY_DOWN is for DOWN arrow key\n{\nprintw(\"BACKWARD\")\ndigitalWrite(0,LOW);\ndigitalWrite(2,HIGH);\ndigitalWrite(3,LOW);\ndigitalWrite(4,HIGH);\n}\n\nif(keypressed==KEY_LEFT || keypressed == 'A' || keypressed == 'a')\n{\n//KEY_LEFT is for LEFT arrow key\nprintw(\"LEFT TURN\");\ndigitalWrite(0,LOW);\ndigitalWrite(2,HIGH);\ndigitalWrite(3,HIGH);\ndigitalWrite(4,LOW);\n}\n\nif(keypressed==KEY_RIGHT || keypressed == 'D' || keypressed == 'd')\n{\n//KEY_RIGHT is for right arrow keys\nprintw(\"RIGHT TURN\");\ndigitalWrite(0,HIGH);\ndigitalWrite(2,LOW);\ndigitalWrite(3,LOW);\ndigitalWrite(4,HIGH);\n}\n\nif(keypressed=='S' || keypressed=='s')\n{\nprintw(\"STOP\");\ndigitalWrite(0,HIGH);\ndigitalWrite(2,HIGH);\ndigitalWrite(3,HIGH);\ndigitalWrite(4,HIGH);\n}\n\nif(keypressed=='E' || keypressed=='e')\n{\nbreak; \n}\n}\nendwin(); \nreturn 0; \n}\n```", "```cpp\nif(keypressed == 'r' || keypressed == 'R')\n{\nforward(); //first forward movement\ndelay(2000);\nrightturn(); //first left turn\ndelay(500); //delay needs to be such that the robot takes a perfect 90\u00ba right turn\n\nforward(); //second forward movement\ndelay(2000);\nrightturn(); //second right turn\ndelay(500);\n\nforward(); //third forward movement\ndelay(2000);\nrightturn(); //third and last left turn\ndelay(500);\n\nforward(); //fourth and last forward movement\ndelay(2000);\nstop(); //stop condition\n}\n```", "```cpp\nvoid forward()\n{\ndigitalWrite(0,HIGH);\n digitalWrite(2,LOW);\n digitalWrite(3,HIGH);\n digitalWrite(4,LOW);\n}\n```", "```cpp\nvoid rightturn()\n{\ndigitalWrite(0,HIGH); \n digitalWrite(2,LOW); \n digitalWrite(3,LOW); \n digitalWrite(4,HIGH);\n}\n```", "```cpp\nvoid stop()\n{\ndigitalWrite(0,HIGH); \n digitalWrite(2,HIGH); \n digitalWrite(3,HIGH); \n digitalWrite(4,HIGH);\n}\n```", "```cpp\nsudo apt-get install qt5-default\n```", "```cpp\nsudo apt-get install qtcreator\n```", "```cpp\nsudo apt-get update\nsudo apt-get upgrade -y\n```", "```cpp\nLIBS += -L/usr/local/lib -lwiringPi\n```", "```cpp\nError while building/deploying project LEDOnOff (kit: Desktop)\n When executing step \"qmake\"\n```", "```cpp\nLIBS += -L/usr/local/lib -lwiringPi\n```", "```cpp\ndigitalWrite(leftmotor1, HIGH);\ndigitalWrite(leftmotor2, LOW);\ndigitalWrite(rightmotor1, HIGH);\ndigitalWrite(rightmotor2, LOW);\n```", "```cpp\ndigitalWrite(leftmotor1, HIGH);\ndigitalWrite(leftmotor2, LOW);\ndigitalWrite(rightmotor1, HIGH);\ndigitalWrite(rightmotor2, LOW);\n```", "```cpp\ndigitalWrite(leftmotor1, LOW);\ndigitalWrite(leftmotor2, HIGH);\ndigitalWrite(rightmotor1, HIGH);\ndigitalWrite(rightmotor2, LOW);\n```", "```cpp\ndigitalWrite(leftmotor1, HIGH);\ndigitalWrite(leftmotor2, LOW);\ndigitalWrite(rightmotor1, LOW);\ndigitalWrite(rightmotor2, HIGH);\n```", "```cpp\ndigitalWrite(leftmotor1, HIGH);\ndigitalWrite(leftmotor2, HIGH);\ndigitalWrite(rightmotor1, HIGH);\ndigitalWrite(rightmotor2, HIGH);\n```"]