["```cpp\nCascadeClassifier faceDetector(\"haarcascade_frontalface_alt2.xml\");\n```", "```cpp\nMat videofeed, grayfeed;\nVideoCapture vid(0);\n```", "```cpp\nvid.read(videofeed);\nflip(videofeed, videofeed, 1);\ncvtColor(videofeed, grayfeed, COLOR_BGR2GRAY);\n```", "```cpp\nequalizeHist(grayfeed, grayfeed);\n```", "```cpp\ndetectMultiScale(image, object, scalefactor, min neighbors,flags, min size, max size);\n```", "```cpp\nvector<Rect> face;\n faceDetector.detectMultiScale(grayfeed, faces, 1.3, 5, 0 | CASCADE_SCALE_IMAGE, Size(30, 30));\n```", "```cpp\nfor (size_t f = 0; f < face.size(); f++) \n {\nrectangle(videofeed, face[f], Scalar(255, 0, 0), 2);\nputText(videofeed, \"Face Detected\", Point(face[f].x, face[f].y), FONT_HERSHEY_PLAIN, 1.0, Scalar(0, 255, 0), 2.0);\n}\n```", "```cpp\nimshow(\"Face Detection\", videofeed);\n```", "```cpp\nCascadeClassifier eyeDetector(\"haarcascade_eye.xml\");\n```", "```cpp\nMat faceroi = videofeed(face[f]);\n```", "```cpp\nvector<Rect> eyes;\neyeDetector.detectMultiScale(faceroi, eyes, 1.3, 5, 0 |CASCADE_SCALE_IMAGE,Size(30, 30));\n```", "```cpp\nfor (size_t e = 0; e < eyes.size(); e++)\n {\n Point eyecenter(face[f].x + eyes[e].x + eyes[e].width/2, face[f].y + eyes[e].y + eyes[e].height/2);\n int radius = cvRound((eyes[e].width + eyes[e].height)*0.20);\n circle(videofeed, eyecenter, radius, Scalar(0, 0, 255), 2);\n }\n```", "```cpp\nCascadeClassifier eyeDetectorleft(\"haarcascade_lefteye_2splits.xml\");\n```", "```cpp\nMat faceroi = videofeed(face[f]);\n```", "```cpp\nvector<Rect> lefteye;\neyeDetectorleft.detectMultiScale(faceROI, lefteye, 1.3, 25, 0 |CASCADE_SCALE_IMAGE,Size(30, 30));\n for (size_t le = 0; le < lefteye.size(); le++)\n {\n Point center(face[f].x + lefteye[le].x + lefteye[le].width*0.5, face[f].y + lefteye[le].y + lefteye[le].height*0.5);\n int radius = cvRound((lefteye[le].width + lefteye[le].height)*0.20);\n circle(videofeed, center, radius, Scalar(0, 0, 255), 2);\n }\n```", "```cpp\nCascadeClassifier eyeDetectorright(\"haarcascade_righteye_2splits.xml\");\n```", "```cpp\nMat faceroi = videofeed(face[f]); \nvector<Rect>  righteye;\neyeDetectorright.detectMultiScale(faceROI, righteye, 1.3, 25, 0 |CASCADE_SCALE_IMAGE,Size(30, 30));\n\nfor (size_t re = 0; re < righteye.size(); re++)\n {\n Point center(face[f].x + righteye[re].x + righteye[re].width*0.5, face[f].y + righteye[re].y + righteye[re].height*0.5);\n int radius = cvRound((righteye[re].width + righteye[re].height)*0.20);\n circle(videofeed, center, radius, Scalar(0, 255, 0), 2);\n }\n```", "```cpp\nCascadeClassifier smileDetector(\"haarcascade_smile.xml\");\n```", "```cpp\nMat faceroi = videofeed(face[f]);\n```", "```cpp\nvector<Rect> smile; \nsmileDetector.detectMultiScale(faceroi, smile, 1.3, 25, 0 |CASCADE_SCALE_IMAGE,Size(30, 30));\n for (size_t sm = 0; sm <smile.size(); sm++)\n {\n Point scenter(face[f].x + smile[sm].x + smile[sm].width*0.5, face[f].y + smile[sm].y + smile[sm].height*0.5);\n int sradius = cvRound((smile[sm].width + smile[sm].height)*0.20);\n circle(videofeed, scenter, sradius, Scalar(0, 255, 0), 2);\n }\n```", "```cpp\n pinMode(0,OUTPUT);\n pinMode(2,OUTPUT);\n pinMode(3,OUTPUT);\n```", "```cpp\nsoftPwmCreate(24,0,100); //pin 24 is left Motor pin\nsoftPwmCreate(27,0,100); //pin 27 is left motor pin \nsoftPwmCreate(25,0,100); //pin 25 is right motor pin\nsoftPwmCreate(28,0,100); //pin 28 is right motor pin\n```", "```cpp\nCascadeClassifier faceDetector(\"haarcascade_frontalface_alt2.xml\");\nCascadeClassifier eyeDetectorright(\"haarcascade_righteye_2splits.xml\");\nCascadeClassifier eyeDetectorleft(\"haarcascade_lefteye_2splits.xml\");\nCascadeClassifier smileDetector(\"haarcascade_smile.xml\");\n```", "```cpp\nbool lefteyedetect = false;\nbool righteyedetect = false;\nbool isSmiling = false;\nint facex, facey;\n```", "```cpp\nvector<Rect> face;\nfaceDetector.detectMultiScale(grayfeed, face, 1.1, 5, 0 | CASCADE_SCALE_IMAGE,Size(30, 30)); \n for (size_t f = 0; f < face.size(); f++) \n {\n rectangle(videofeed, face[f], Scalar(255, 0, 0), 2);\n\n putText(videofeed, \"Face Detected\", Point(face[f].x, face[f].y), FONT_HERSHEY_PLAIN, 1.0, Scalar(0, 255, 0), 1.0); \n\nfacex = face[f].x +face[f].width/2;\nfacey = face[f].y + face[f].height/2; \n\nPoint facecenter(facex, facey);\ncircle(videofeed,facecenter,5,Scalar(255,255,255),-1);\n```", "```cpp\neyeDetectorleft.detectMultiScale(faceroi, lefteye, 1.3, 25, 0 |CASCADE_SCALE_IMAGE,Size(30, 30));\n for (size_t le = 0; le < lefteye.size(); le++)\n {\n Point center(face[f].x + lefteye[le].x + lefteye[le].width*0.5, face[f].y + lefteye[le].y + lefteye[le].height*0.5);\n int radius = cvRound((lefteye[le].width + lefteye[le].height)*0.25);\n circle(videofeed, center, radius, Scalar(0, 0, 255), 2);\n lefteyedetect = true;\n }\n```", "```cpp\n eyeDetectorright.detectMultiScale(faceroi, righteye, 1.3, 25, 0 |CASCADE_SCALE_IMAGE,Size(30, 30));\n for (size_t re = 0; re < righteye.size(); re++)\n {\n Point center(face[f].x + righteye[re].x + righteye[re].width*0.5, face[f].y + righteye[re].y + righteye[re].height*0.5);\n int radius = cvRound((righteye[re].width + righteye[re].height)*0.25);\n circle(videofeed, center, radius, Scalar(255, 255, 0), 2);\n righteyedetect = true;\n }\n```", "```cpp\n smileDetector.detectMultiScale(faceroi, smile, 1.3, 25, 0 |CASCADE_SCALE_IMAGE,Size(30, 30));\n for (size_t sm = 0; sm <smile.size(); sm++)\n {\n Point scenter(face[f].x + smile[sm].x + smile[sm].width*0.5, face[f].y + smile[sm].y + smile[sm].height*0.5);\n int sradius = cvRound((smile[sm].width + smile[sm].height)*0.25);\n circle(videofeed, scenter, sradius, Scalar(0, 255, 0), 2, 8, 0);\n isSmiling = true;\n }\n```", "```cpp\nif(lefteyedetect == true){\ndigitalWrite(0,HIGH);\n}\nelse\n{\ndigitalWrite(0,LOW);\n}\n```", "```cpp\nif(righteyedetect == true){\ndigitalWrite(2,HIGH);\n}\nelse\n{\ndigitalWrite(2,LOW);\n}\n```", "```cpp\nif(isSmiling == true){\n digitalWrite(3,HIGH);\n }\n else\n {\n digitalWrite(3,LOW);\n }\n```", "```cpp\nif(facex > 0 && facex < 280)\n {\n putText(videofeed, \"Left\", Point(320,10), FONT_HERSHEY_PLAIN, 1.0, CV_RGB(0, 0, 255), 2.0); \n softPwmWrite(24, 0);\n softPwmWrite(27, 30);\n softPwmWrite(25, 30);\n softPwmWrite(28, 0); \n } \n\n if(facex > 360 && facex < 640)\n {\n putText(videofeed, \"Right\", Point(320,10), FONT_HERSHEY_PLAIN, 1.0, CV_RGB(0, 0, 255), 2.0); \n softPwmWrite(24, 30);\n softPwmWrite(27, 0);\n softPwmWrite(25, 0);\n softPwmWrite(28, 30);\n\n }\n if(facex > 280 && facex < 360)\n {\n putText(videofeed, \"Middle\", Point(320,10), FONT_HERSHEY_PLAIN, 1.0, CV_RGB(0, 0, 255), 2.0); \n softPwmWrite(24, 0);\n softPwmWrite(27, 0);\n softPwmWrite(25, 0);\n softPwmWrite(28, 0);\n }\n```"]