["```cpp\n#include <iostream>\n#include <iomanip>\n#include <cstring>\nusing namespace std;\n// simple const variable declaration and initialization\nconst int MAX = 50; \nint minimum(int a, int b)\u00a0\u00a0// function definition with\n{\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// formal parameters\n\u00a0\u00a0\u00a0\u00a0return (a < b)? a : b;\u00a0\u00a0\u00a0// conditional operator ?: \n}\n```", "```cpp\nint main()\n{\n\u00a0\u00a0\u00a0\u00a0int x, y;\n\u00a0\u00a0\u00a0\u00a0cout << \"Enter two values: \";\n\u00a0\u00a0\u00a0\u00a0cin >> x >> y;\n\u00a0\u00a0\u00a0\u00a0const int MIN = minimum(x, y);\u00a0\u00a0// const var initialized \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// with a function's return value\n\u00a0\u00a0\u00a0\u00a0cout << \"Minimum is: \" << MIN << endl;\n\u00a0\u00a0\u00a0\u00a0char bigName[MAX];\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// const var used to size an array\n\u00a0\u00a0\u00a0\u00a0cout << \"Enter a name: \";\n\u00a0\u00a0\u00a0\u00a0cin >> setw(MAX) >> bigName;\n\u00a0\u00a0\u00a0\u00a0const int NAMELEN = strlen(bigName); // another const\n\u00a0\u00a0\u00a0\u00a0cout << \"Length of name: \" << NAMELEN << endl;\n\u00a0\u00a0\u00a0\u00a0return 0;\n}\n```", "```cpp\nEnter two values: 39 17\nMinimum is: 17\nEnter a name: Gabby\nLength of name: 5\n```", "```cpp\n#include <iostream>\nusing namespace std;\nint minimum(int, int);\u00a0\u00a0\u00a0\u00a0\u00a0// function prototype\n\nint main()\n{\n\u00a0\u00a0\u00a0\u00a0int x = 5, y = 89;\n\u00a0\u00a0\u00a0\u00a0// function call with actual parameters\n\u00a0\u00a0\u00a0\u00a0cout << minimum(x, y) << endl;\u00a0\u00a0\u00a0\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0return 0;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n}\nint minimum(int a, int b)\u00a0\u00a0// function definition with\n{\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// formal parameters\n\u00a0\u00a0\u00a0\u00a0return (a < b)? a : b;\u00a0\u00a0\n}\n```", "```cpp\n5\n```", "```cpp\n#include <iostream>\nusing namespace std;\nint minimum(int arg1, int arg2);\u00a0\u00a0\u00a0\u00a0// function prototype with\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// optional argument names\nint main()\n{\n\u00a0\u00a0\u00a0\u00a0int x = 5, y = 89;\n\u00a0\u00a0\u00a0\u00a0cout << minimum(x, y) << endl;\u00a0\u00a0\u00a0// function call\n\u00a0\u00a0\u00a0\u00a0return 0;\n}\nint minimum(int a, int b)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// function definition\n{\n\u00a0\u00a0\u00a0\u00a0return (a < b)? a : b;\u00a0\u00a0\n}\n```", "```cpp\n5\n```", "```cpp\n#include <iostream>\nusing namespace std;\nint minimum(int arg1, int arg2 = 100000);\u00a0\u00a0// fn. prototype\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// with one default value\nint main()\n{\n\u00a0\u00a0\u00a0\u00a0int x = 5, y = 89;\n\u00a0\u00a0\u00a0\u00a0cout << minimum(x) << endl; // function call with only\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// one argument (uses default)\n\u00a0\u00a0\u00a0\u00a0cout << minimum(x, y) << endl; // no default values used\n\u00a0\u00a0\u00a0\u00a0return 0;\n}\nint minimum(int a, int b)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// function definition\n{\n\u00a0\u00a0\u00a0\u00a0return (a < b)? a : b;\u00a0\u00a0\n}\n```", "```cpp\n5\n5\n```", "```cpp\n#include <iostream>\nusing namespace std;\nint minimum(int, int);\u00a0\u00a0\u00a0// standard function prototype\nvoid function1(int x)\n{\u00a0\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0int minimum(int arg1, int arg2 = 500); // local prototype\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// with default value\n\u00a0\u00a0\u00a0\u00a0cout << minimum(x) << endl; \n}\nvoid function2(int x)\n{\n\u00a0\u00a0\u00a0\u00a0int minimum(int arg1, int arg2 = 90);\u00a0\u00a0// local prototype\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// with default value\n\u00a0\u00a0\u00a0\u00a0cout << minimum(x) << endl; \n}\n\nint minimum(int a, int b)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// function definition\n{ \n\u00a0\u00a0\u00a0\u00a0return (a < b)? a : b;\u00a0\u00a0\u00a0\n}\nint main()\n{\n\u00a0\u00a0\u00a0\u00a0function1(30);\u00a0\u00a0\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0function2(450);\n\u00a0\u00a0\u00a0\u00a0return 0;\n}\n```", "```cpp\n30\n90\n```", "```cpp\n#include <iostream>\n#include <cmath>\nusing namespace std;\nconst float PI = 3.14159;\nclass Circle\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// user defined type declarations\n{\npublic:\n\u00a0\u00a0\u00a0float radius;\n\u00a0\u00a0\u00a0float area;\n};\nclass Rectangle\n{\npublic:\n\u00a0\u00a0\u00a0float length;\n\u00a0\u00a0\u00a0float width;\n\u00a0\u00a0\u00a0float area;\n};\nvoid display(Circle);\u00a0\u00a0\u00a0\u00a0\u00a0// 'overloaded' function prototypes\nvoid display(Rectangle);\u00a0\u00a0// since they differ in signature\n```", "```cpp\nint main()\n{\n\u00a0\u00a0\u00a0\u00a0Circle myCircle;\n\u00a0\u00a0\u00a0\u00a0Rectangle myRect;\n\u00a0\u00a0\u00a0\u00a0Rectangle mySquare;\n\u00a0\u00a0\u00a0\u00a0myCircle.radius = 5.0;\n\u00a0\u00a0\u00a0\u00a0myCircle.area = PI * pow(myCircle.radius, 2.0);\n\u00a0\u00a0\u00a0\u00a0myRect.length = 2.0;\n\u00a0\u00a0\u00a0\u00a0myRect.width = 4.0;\n\u00a0\u00a0\u00a0\u00a0myRect.area = myRect.length * myRect.width;\n\u00a0\u00a0\u00a0\u00a0mySquare.length = 4.0;\n\u00a0\u00a0\u00a0\u00a0mySquare.width = 4.0;\n\u00a0\u00a0\u00a0\u00a0mySquare.area = mySquare.length * mySquare.width;\n\u00a0\u00a0\u00a0\u00a0display(myCircle);\u00a0\u00a0\u00a0\u00a0\u00a0// invoke: void display(Circle)\n\u00a0\u00a0\u00a0\u00a0display(myRect);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// invoke: void display(Rectangle)\n\u00a0\u00a0\u00a0\u00a0display(mySquare);\n\u00a0\u00a0\u00a0\u00a0return 0;\n}\n```", "```cpp\nvoid display (Circle c)\n{\n\u00a0\u00a0\u00a0cout << \"Circle with radius \" << c.radius;\n\u00a0\u00a0\u00a0cout << \" has an area of \" << c.area << endl; \n}\n\nvoid display (Rectangle r)\n{\n\u00a0\u00a0\u00a0cout << \"Rectangle with length \" << r.length;\n\u00a0\u00a0\u00a0cout << \" and width \" << r.width;\n\u00a0\u00a0\u00a0cout << \" has an area of \" << r.area << endl; \n}\n```", "```cpp\nCircle with radius 5 has an area of 78.5397\nRectangle with length 2 and width 4 has an area of 8\nRectangle with length 4 and width 4 has an area of 16\n```", "```cpp\n#include <iostream>\nusing namespace std; \nint maximum(double, double);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// function prototype\n\nint main()\n{\n\u00a0\u00a0\u00a0\u00a0int result;\n\u00a0\u00a0\u00a0\u00a0int m = 6, n = 10;\n\u00a0\u00a0\u00a0\u00a0float x = 5.7, y = 9.89;\n\n\u00a0\u00a0\u00a0\u00a0result =\u00a0\u00a0maximum(x, y); \n\u00a0\u00a0\u00a0\u00a0cout << \"Result is: \" << result << endl;\n\u00a0\u00a0\u00a0\u00a0cout << \"The maximum is: \" << maximum(m, n) << endl;\n\u00a0\u00a0\u00a0\u00a0return 0;\n}\nint maximum(double a, double b)\u00a0\u00a0// function definition\n{\n\u00a0\u00a0\u00a0\u00a0return (a > b)? a : b;\n}\n```", "```cpp\nResult is: 9\nThe maximum is: 10\n```", "```cpp\n#include <iostream>\nusing namespace std;\nint maximum (int, int);\u00a0\u00a0\u00a0\u00a0\u00a0// overloaded function prototypes\nfloat maximum (float, float); \nint main()\n{\n\u00a0\u00a0\u00a0\u00a0char a = 'A', b = 'B';\n\u00a0\u00a0\u00a0\u00a0float x = 5.7, y = 9.89;\n\u00a0\u00a0\u00a0\u00a0int m = 6, n = 10;\n\u00a0\u00a0\u00a0\u00a0cout << \"The max is: \" << maximum(a, b) << endl;\n\u00a0\u00a0\u00a0\u00a0cout << \"The max is: \" << maximum(x, y) << endl;\n\u00a0\u00a0\u00a0\u00a0cout << \"The max is: \" << maximum(m, n) << endl;\n\u00a0\u00a0\u00a0\u00a0// The following (ambiguous) line generates a compiler \n\u00a0\u00a0\u00a0\u00a0// error since there are two equally good fn. candidates \n\u00a0\u00a0\u00a0\u00a0// cout << \"The maximum is: \" << maximum(a, y) << endl;\n\u00a0\u00a0\u00a0\u00a0// We can force a choice by using an explicit typecast\n\u00a0\u00a0\u00a0\u00a0cout << \"The max is: \" << maximum((float)a, y) << endl;\n\u00a0\u00a0\u00a0\u00a0return 0;\n}\nint maximum (int arg1, int arg2)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// function definition\n{\n\u00a0\u00a0\u00a0\u00a0return (arg1 > arg2)? arg1 : arg2;\n}\nfloat maximum (float arg1, float arg2)\u00a0\u00a0// overloaded function\n{\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0return (arg1 > arg2)? arg1 : arg2;\n}\n```", "```cpp\nThe maximum is: 66\nThe maximum is: 9.89\nThe maximum is: 10\nThe maximum is: 65\n```"]