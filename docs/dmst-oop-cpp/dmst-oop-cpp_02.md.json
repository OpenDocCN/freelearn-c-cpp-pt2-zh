["```cpp\nint x = 5;\nint a = x;\nfloat y = 9.87; \nfloat y2 = 10.76f;\u00a0\u00a0// optional 'f' suffix on float literal\nfloat b = y;\ndouble yy = 123456.78;\ndouble c = yy;\nchar z = 'Z';\nchar d = z;\nbool test = true;\nbool e = test;\nbool f = !test;\n```", "```cpp\nchar name[10] = \"Dorothy\"; \nfloat grades[20];\u00a0\u00a0\ngrades[0] = 4.0;\n```", "```cpp\nchar book1[20] = \"C++ Programming\":\nchar book2[25];\nstrcpy(book2, \"OO Programming with C++\");\nstrcmp(book1, book2);\nlength = strlen(book2);\n```", "```cpp\n#include <iostream>\nusing namespace std;\nint main()\n{\n\u00a0\u00a0\u00a0\u00a0char name[20];\n\u00a0\u00a0\u00a0\u00a0int age;\n\u00a0\u00a0\u00a0\u00a0cout << \"Please enter a name and an age: \";\n\u00a0\u00a0\u00a0\u00a0cin >> name >> age;\n\u00a0\u00a0\u00a0\u00a0cout << \"Hello \" << name;\n\u00a0\u00a0\u00a0\u00a0cout << \". You are \" << age << \" years old.\" << endl;\n\u00a0\u00a0\u00a0\u00a0return 0;\n}\n```", "```cpp\n#include <iostream>\n#include <iomanip>\nusing namespace std;\nint main()\n{\n\u00a0\u00a0\u00a0\u00a0char name[20];\n\u00a0\u00a0\u00a0\u00a0float gpa;\u00a0\u00a0\u00a0// grade point average\n\u00a0\u00a0\u00a0\u00a0cout << \"Please enter a name and a gpa: \"; \n\u00a0\u00a0\u00a0\u00a0cin >> setw(20) >> name >> gpa;\n\u00a0\u00a0\u00a0\u00a0cout << \"Hello \" << name << flush;\n\u00a0\u00a0\u00a0\u00a0cout << \". GPA is: \" << setprecision(3) << gpa << endl;\n\u00a0\u00a0\u00a0\u00a0return 0;\n}\n```", "```cpp\n#include <iostream>\nusing namespace std;\nint main()\n{\n\u00a0\u00a0\u00a0\u00a0int x;\n\u00a0\u00a0\u00a0\u00a0cout << \"Enter an integer: \";\n\u00a0\u00a0\u00a0\u00a0cin >> x;\n\u00a0\u00a0\u00a0\u00a0if (x == 0) \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0cout << \"x is 0\" << endl;\n\u00a0\u00a0\u00a0\u00a0else if (x < 0)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0cout << \"x is negative\" << endl;\n\u00a0\u00a0\u00a0\u00a0else\n\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0cout << \"x is positive\";\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0cout << \"and ten times x is: \" << x * 10 << endl;\n\u00a0\u00a0\u00a0\u00a0}\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0return 0;\n}\n```", "```cpp\n#include <iostream>\nusing namespace std;\nint main()\n{\n\u00a0\u00a0\u00a0\u00a0int i = 0;\n\u00a0\u00a0\u00a0\u00a0while (i < 10)\n\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0cout << i << endl;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0i++;\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0i = 0;\n\u00a0\u00a0\u00a0\u00a0do \n\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0cout << i << endl;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0i++;\n\u00a0\u00a0\u00a0\u00a0} while (i < 10);\n\u00a0\u00a0\u00a0\u00a0return 0;\n}\n```", "```cpp\n#include <iostream>\nusing namespace std;\nint main()\n{\n\u00a0\u00a0\u00a0\u00a0int i;\n\u00a0\u00a0\u00a0\u00a0for (i = 0; i < 10; i++) \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0cout << i << endl;\n\u00a0\u00a0\u00a0\u00a0for (int j = 0; j < 10; j++)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0cout << j << endl;\n\u00a0\u00a0\u00a0\u00a0return 0;\n}\n```", "```cpp\n#include <iostream>\nusing namespace std;\nint main()\n{\n\u00a0\u00a0\u00a0\u00a0for (int i = 0; i < 10; i++) \n\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0cout << i << endl;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0for (int j = 0; j < 10; j++)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0cout << j << endl;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0cout << \"\\n\";\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0return 0;\n}\n```", "```cpp\nscore += 5;\nscore++;\nif (score == 100)\n\u00a0\u00a0\u00a0\u00a0cout << \"You have a perfect score!\" << endl;\nelse\n\u00a0\u00a0\u00a0\u00a0cout << \"Your score is: \" << score << endl;\n// equivalent to if - else above, but using ?: operator\n(score == 100)? cout << \"You have a perfect score\" << endl :\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0cout << \"Your score is: \" << score << endl; \n```", "```cpp\n<return type> functionName (<argumentType argument1, \u2026>)\n{\n\u00a0\u00a0\u00a0\u00a0expression 1\u2026N;\n\u00a0\u00a0\u00a0\u00a0<return value/expression;>\n}\n```", "```cpp\n#include <iostream>\nusing namespace std;\nint minimum(int a, int b)\n{\n\u00a0\u00a0\u00a0\u00a0if (a < b)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return a;\n\u00a0\u00a0\u00a0\u00a0else\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return b;\n}\nint main()\n{\n\u00a0\u00a0\u00a0\u00a0int x, y;\n\u00a0\u00a0\u00a0\u00a0cout << \"Enter two integers: \";\n\u00a0\u00a0\u00a0\u00a0cin >> x >> y;\n\u00a0\u00a0\u00a0\u00a0cout << \"The minimum is: \" << minimum(x, y) << endl;\n\u00a0\u00a0\u00a0\u00a0return 0;\n}\n```", "```cpp\n#include <iostream>\n#include <cstring>\nusing namespace std;\nstruct student\n{\n\u00a0\u00a0\u00a0\u00a0char name[20];\n\u00a0\u00a0\u00a0\u00a0float semesterGrades[5];\n\u00a0\u00a0\u00a0\u00a0float gpa;\n};\nint main()\n{\n\u00a0\u00a0\u00a0\u00a0student s1;\n\u00a0\u00a0\u00a0\u00a0strcpy(s1.name, \"George Katz\");\n\u00a0\u00a0\u00a0\u00a0s1.semesterGrades[0] = 3.0;\n\u00a0\u00a0\u00a0\u00a0s1.semesterGrades[1] = 4.0;\n\u00a0\u00a0\u00a0\u00a0s1.gpa = 3.5;\n\u00a0\u00a0\u00a0\u00a0cout << s1.name << \" has GPA: \" << s1.gpa << endl;\n\u00a0\u00a0\u00a0\u00a0return 0;\n}\n```", "```cpp\ntypedef float dollars; \n```", "```cpp\n#include <iostream>\n#include <cstring>\nusing namespace std;\nclass Student\n{\npublic:\n\u00a0\u00a0\u00a0\u00a0char name[20];\n\u00a0\u00a0\u00a0\u00a0float semesterGrades[5];\n\u00a0\u00a0\u00a0\u00a0float gpa;\n};\nint main()\n{\n\u00a0\u00a0\u00a0\u00a0Student s1;\n\u00a0\u00a0\u00a0\u00a0strcpy(s1.name, \"George Katz\");\n\u00a0\u00a0\u00a0\u00a0s1.semesterGrades[0] = 3.0;\n\u00a0\u00a0\u00a0\u00a0s1.semesterGrades[1] = 4.0;\n\u00a0\u00a0\u00a0\u00a0s1.gpa = 3.5;\n\u00a0\u00a0\u00a0\u00a0cout << s1.name << \" has GPA: \" << s1.gpa << endl;\n\u00a0\u00a0\u00a0\u00a0return 0;\n}\n```", "```cpp\n#include <iostream>\nusing namespace std;\nenum day {Sunday,\u00a0\u00a0Monday, Tuesday, Wednesday, Thursday,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Friday, Saturday};\nenum workDay {Mon = 1, Tues, Wed, Thurs, Fri};\nint main()\n{\n\u00a0\u00a0\u00a0\u00a0day birthday = Monday;\n\u00a0\u00a0\u00a0\u00a0workDay payday = Fri;\n\u00a0\u00a0\u00a0\u00a0cout << \"Birthday is \" << birthday << endl;\n\u00a0\u00a0\u00a0\u00a0cout << \"Payday is \" << payday << endl;\n\u00a0\u00a0\u00a0\u00a0return 0;\n}\n```", "```cpp\n#include <iostream>\nusing namespace std;\nnamespace DataTypes\n{\n\u00a0\u00a0\u00a0\u00a0int total;\n\u00a0\u00a0\u00a0\u00a0class LinkList\n\u00a0\u00a0\u00a0\u00a0{\u00a0\u00a0// full class definition \u2026 \n\u00a0\u00a0\u00a0\u00a0};\n\u00a0\u00a0\u00a0\u00a0class Stack\n\u00a0\u00a0\u00a0\u00a0{\u00a0\u00a0// full class definition \u2026\n\u00a0\u00a0\u00a0\u00a0};\n};\nnamespace AbstractDataTypes\n{\n\u00a0\u00a0\u00a0\u00a0class Stack\n\u00a0\u00a0\u00a0\u00a0{\u00a0\u00a0// full class definition \u2026\n\u00a0\u00a0\u00a0\u00a0};\n\u00a0\u00a0\u00a0\u00a0class Queue\n\u00a0\u00a0\u00a0\u00a0{\u00a0\u00a0// full class description \u2026\n\u00a0\u00a0\u00a0\u00a0};\n};\n// Add entries to the AbstractDataTypes namespace\nnamespace AbstractDataTypes\u00a0\u00a0\u00a0\n{\n\u00a0\u00a0\u00a0\u00a0int total;\n\u00a0\u00a0\u00a0\u00a0class Tree\n\u00a0\u00a0\u00a0\u00a0{\u00a0\u00a0// full class definition \u2026\n\u00a0\u00a0\u00a0\u00a0};\n};\nint main()\n{\n\u00a0\u00a0\u00a0\u00a0using namespace AbstractDataTypes; // activate namespace\n\u00a0\u00a0\u00a0\u00a0using DataTypes::LinkList;\u00a0\u00a0\u00a0\u00a0// activate only LinkList \n\u00a0\u00a0\u00a0\u00a0LinkList list1;\u00a0\u00a0\u00a0\u00a0\u00a0// LinkList is found in DataTypes\n\u00a0\u00a0\u00a0\u00a0Stack stack1;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// Stack is found in AbstractDataTypes\n\u00a0\u00a0\u00a0\u00a0total = 5;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// total from active AbstractDataTypes\n\u00a0\u00a0\u00a0\u00a0DataTypes::total = 85; // specify non-active member, total\n\u00a0\u00a0\u00a0\u00a0cout << \"total \" << total << \"\\n\";\n\u00a0\u00a0\u00a0\u00a0cout << \"DataTypes::total \" << DataTypes::total << endl;\n\u00a0\u00a0\u00a0\u00a0return 0;\n}\n```"]