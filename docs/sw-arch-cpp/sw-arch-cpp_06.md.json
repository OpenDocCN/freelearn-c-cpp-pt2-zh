["```cpp\nretry_policy:\n  retry_on: \"5xx\"\n\n  num_retries: 3\n\n  per_try_timeout: 2s\n```", "```cpp\ncircuit_breakers:\n\n  thresholds:\n\n    - priority: DEFAULT\n\n      max_connections: 1000\n\n      max_requests: 1000\n\n      max_pending_requests: 1000\n```", "```cpp\nstatic_resources:\n  listeners:\n  - address:\n      socket_address:\n        address: 0.0.0.0\n        port_value: 8080\n    traffic_direction: INBOUND\n```", "```cpp\n    filter_chains:\n      - filters:\n          - name: envoy.filters.network.http_connection_manager\n            typed_config:\n              \"@type\": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager\n```", "```cpp\n              generate_request_id: true\n              tracing:\n                provider:\n                  name: envoy.tracers.dynamic_ot\n                  typed_config:\n                    \"@type\": type.googleapis.com/envoy.config.trace.v3.DynamicOtConfig\n                    library: /usr/local/lib/libjaegertracing_plugin.so\n                    config:\n                      service_name: front_proxy\n                      sampler:\n                        type: const\n                        param: 1\n                      reporter:\n                        localAgentHostPort: jaeger:6831\n                      headers:\n                        jaegerDebugHeader: jaeger-debug-id\n                        jaegerBaggageHeader: jaeger-baggage\n                        traceBaggageHeaderPrefix: uberctx-\n                      baggage_restrictions:\n                        denyBaggageOnInitializationFailure: false\n                        hostPort: \"\"\n```", "```cpp\n              codec_type: auto\n              stat_prefix: ingress_http\n              route_config:\n                name: example_route\n                virtual_hosts:\n                  - name: front_proxy\n                    domains:\n                      - \"*\"\n                    routes:\n                      - match:\n                          prefix: \"/\"\n                        route:\n                          cluster: example_service\n                        decorator:\n                          operation: example_operation\n```", "```cpp\n            http_filters:\n            - name: envoy.filters.http.router\n              typed_config: {}\n            use_remote_address: true\n```", "```cpp\n  clusters:\n    - name: example_service\n      connect_timeout: 0.250s\n      type: strict_dns\n      lb_policy: round_robin\n      load_assignment:\n        cluster_name: example_service\n        endpoints:\n          - lb_endpoints:\n              - endpoint:\n                  address:\n                    socket_address:\n                      address: example_service\n                      port_value: 5678\n```", "```cpp\nadmin:\n  access_log_path: /tmp/admin_access.log\n  address:\n    socket_address:\n      address: 0.0.0.0\n      port_value: 9901\n```", "```cpp\nFROM envoyproxy/envoy:v1.17-latest\n\nRUN apt-get update && \\\n    apt-get install -y curl && \\\n    rm -rf /var/lib/apt/lists/*\nRUN curl -Lo - https://github.com/tetratelabs/getenvoy-package/files/3518103/getenvoy-centos-jaegertracing-plugin.tar.gz | tar -xz && mv libjaegertracing.so.0.4.2 /usr/local/lib/libjaegertracing_plugin.so\n\nCOPY envoy-front_proxy.yaml /etc/envoy/envoy.yaml\n```", "```cpp\nversion: \"3.7\"\n\nservices:\n  front_proxy:\n    build:\n      context: .\n      dockerfile: Dockerfile-front_proxy\n    networks:\n      - example_network\n    ports:\n      - 12345:12345\n      - 9901:9901\n```", "```cpp\n  example_service:\n    image: hashicorp/http-echo\n    networks:\n      - example_network\n    command: -text \"It works!\"\n```", "```cpp\n  jaeger:\n    image: jaegertracing/all-in-one\n    environment:\n      - COLLECTOR_ZIPKIN_HTTP_PORT=9411\n    networks:\n      - example_network\n    ports:\n      - 16686:16686\n```", "```cpp\nnetworks:\n  example_network: {}\n```", "```cpp\n- match:\n    prefix: \"/\"\n  route:\n    weighted_clusters:\n      clusters:\n      - name: new_version\n        weight: 5\n      - name: old_version\n        weight: 95\n```", "```cpp\nclusters:\n  - name: old_version\n    connect_timeout: 0.250s\n    type: strict_dns\n    lb_policy: round_robin\n    load_assignment:\n      cluster_name: old_version\n      endpoints:\n        - lb_endpoints:\n            - endpoint:\n                address:\n                  socket_address:\n                    address: old_version\n                    port_value: 5678\n```", "```cpp\n- name: new_version\n  connect_timeout: 0.250s\n  type: strict_dns\n  lb_policy: round_robin\n  load_assignment:\n    cluster_name: new_version\n    endpoints:\n      - lb_endpoints:\n          - endpoint:\n              address:\n                socket_address:\n                  address: new_version\n                  port_value: 5678\n```"]