["```cpp\ncmake_minimum_required(VERSION 3.10)\n\nproject(\"Breathe Demo\" VERSION 0.0.1 LANGUAGES CXX)\n\nlist(APPEND CMAKE_MODULE_PATH \"${CMAKE_CURRENT_LIST_DIR}/cmake\")\nadd_subdirectory(src)\nadd_subdirectory(doc)\n```", "```cpp\nfind_program(\n  SPHINX_EXECUTABLE\n  NAMES sphinx-build\n  DOC \"Path to sphinx-build executable\")\n\n# handle REQUIRED and QUIET arguments, set SPHINX_FOUND variable\ninclude(FindPackageHandleStandardArgs)\nfind_package_handle_standard_args(\n  Sphinx \"Unable to locate sphinx-build executable\" SPHINX_EXECUTABLE)\n```", "```cpp\n#pragma once\n\n// the @file annotation is needed for Doxygen to document the free\n// functions in this file\n/**\n * @file\n * @brief The main entry points of our demo\n */\n\n/**\n * A unit of performable work\n */\nstruct Payload {\n  /**\n   * The actual amount of work to perform\n   */\n  int amount;\n};\n\n/**\n   @brief Performs really important work\n   @param payload the descriptor of work to be performed\n */\nvoid perform_work(struct Payload payload);\n```", "```cpp\n#include \"breathe_demo/demo.h\"\n\n#include <chrono>\n#include <thread>\n\nvoid perform_work(Payload payload) {\n  std::this_thread::sleep_for(std::chrono::seconds(payload.amount));\n}\n```", "```cpp\nadd_library(BreatheDemo demo.cpp)\ntarget_include_directories(BreatheDemo PUBLIC   \n  ${PROJECT_SOURCE_DIR}/include)\ntarget_compile_features(BreatheDemo PUBLIC cxx_std_11)\n```", "```cpp\nfind_package(Doxygen)\nif (NOT DOXYGEN_FOUND)\n  return()\nendif()\n```", "```cpp\nset(DOXYGEN_GENERATE_HTML NO)\nset(DOXYGEN_GENERATE_XML YES)\n```", "```cpp\n# Note: Use doxygen_add_docs(doxygen-doc ALL ...) if you want your \n# documentation to be created by default each time you build. Without the # keyword you need to explicitly invoke building of the 'doc' target.\ndoxygen_add_docs(doxygen-doc ${PROJECT_SOURCE_DIR}/include COMMENT\n                 \"Generating API documentation with Doxygen\")\n```", "```cpp\nfind_package(Sphinx REQUIRED)\nconfigure_file(${CMAKE_CURRENT_SOURCE_DIR}/conf.py.in\n               ${CMAKE_CURRENT_BINARY_DIR}/conf.py @ONLY)\nadd_custom_target(\n  sphinx-doc ALL\n  COMMAND ${SPHINX_EXECUTABLE} -b html -c ${CMAKE_CURRENT_BINARY_DIR}\n          ${CMAKE_CURRENT_SOURCE_DIR} ${CMAKE_CURRENT_BINARY_DIR}\n  WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}\n  COMMENT \"Generating API documentation with Sphinx\"\n  VERBATIM)\n```", "```cpp\nextensions = [ \"breathe\", \"m2r2\" ]\nbreathe_projects = { \"BreatheDemo\": \"@CMAKE_CURRENT_BINARY_DIR@/xml\" }\nbreathe_default_project = \"BreatheDemo\"\n\nproject = \"Breathe Demo\"\nauthor = \"Breathe Demo Authors\"\ncopyright = \"2021, Breathe Demo Authors\"\nversion = \"@PROJECT_VERSION@\"\nrelease = \"@PROJECT_VERSION@\n\nhtml_theme = 'sphinx_rtd_theme'\n```", "```cpp\nBreathe Demo\n============\n\nWelcome to the Breathe Demo documentation!\n\n.. toctree::\n :maxdepth: 2\n :caption: Contents:\n\nIntroduction <self>\n readme\n api_reference\n```", "```cpp\nAPI Reference\n=============\n\n.. doxygenindex::\n\n```"]